{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","components/Logo.js","components/DashboardNavbar.js","components/NavItem.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainNavbar.js","components/MainLayout.js","components/account/AccountProfile.js","components/account/AccountProfileDetails.js","pages/Account.js","components/dashboard/Doctors.js","components/dashboard/Sales.js","components/dashboard/Requests.js","components/dashboard/TotalCustomers.js","components/dashboard/Ambulances.js","services/httpservice.js","pages/Dashboard.js","pages/Login.js","pages/NotFound.js","components/product/ProductListToolbar.js","components/product/ProductCard.js","__mocks__/products.js","pages/ProductList.js","pages/Register.js","components/settings/SettingsPassword.js","pages/Settings.js","components/ambulances/AmbulancesListToolbar.js","components/ambulances/AmbulancesListResults.js","pages/Ambulances/index.js","pages/Ambulances/create.js","pages/Ambulances/details.js","components/businesses/BusinessesListToolbar.js","components/businesses/BusinessesListResults.js","pages/Businesses/index.js","pages/Businesses/create.js","pages/Businesses/details.js","components/categories/CategoriesListToolbar.js","components/categories/CategoriesListResults.js","pages/Categories/index.js","pages/Categories/single.js","components/requests/RequestListResults.js","components/requests/RequestListToolbar.js","pages/Requests/index.js","pages/Requests/view.js","pages/ServiceProviders/create.js","pages/ServiceProviders/details.js","components/serviceProviders/ServiceProvidersListToolbar.js","components/serviceProviders/ServiceProvidersListResults.js","pages/ServiceProviders/index.js","components/services/ServicesListToolbar.js","components/services/ServicesListResults.js","pages/Services/index.js","components/users/UsersListToolbar.js","components/users/UsersListResults.js","pages/Users/index.js","pages/Users/create.js","routes.js","Interceptor.js","App.js","hooks/useToken.js","hooks/useSettings.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","props","alt","src","DashboardNavbar","onMobileNavOpen","rest","useState","notifications","navigate","useNavigate","AppBar","elevation","Toolbar","to","Box","sx","flexGrow","Hidden","lgDown","IconButton","color","onClick","Badge","badgeContent","length","variant","localStorage","clear","reload","lgUp","NavItem","href","Icon","icon","title","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","display","py","Button","component","RouterLink","justifyContent","textTransform","mr","size","items","BarChartIcon","InboxIcon","UsersIcon","PlusSquareIcon","BusinessIcon","DashboardSidebar","onMobileClose","openMobile","useEffect","content","flexDirection","p","List","map","item","target","rel","Drawer","anchor","onClose","open","PaperProps","defaultProps","DashboardLayoutRoot","experimentalStyled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","MainNavbar","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","user","AccountProfile","Card","CardContent","alignItems","Avatar","Typography","gutterBottom","moment","format","Divider","CardActions","fullWidth","states","value","label","AccountProfileDetails","firstName","lastName","email","phone","state","country","values","setValues","handleChange","event","name","autoComplete","noValidate","CardHeader","subheader","Grid","container","spacing","md","xs","TextField","helperText","onChange","required","type","select","SelectProps","native","option","Account","Helmet","minHeight","Container","maxWidth","lg","Doctors","count","red","pt","green","Sales","serviceRequestsTrend","ambulanceRequestsTrend","interval","useTheme","labels","serviceRequestsData","ambulanceRequestsData","records","push","date","data","datasets","indigo","grey","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","position","Requests","orange","TotalCustomers","Ambulances","apiURL","myHeaders","Accept","makeGetRequest","theURL","token","getItem","theToken","JSON","parse","url","Authorization","plainTextToken","fetch","method","headers","theBody","theMethod","Dashboard","summary","setSummary","intervalUnit","setIntervalUnit","subtract","startDate","setStartDate","unit","setInterval","availableTimeSlots","getSummary","stringify","from","makePostRequest","then","response","json","responseJson","status","console","log","catch","error","sm","xl","Select","labelId","id","selectedInterval","filter","obj","startOf","slot","MenuItem","serviceProvidersCount","ambulancesCount","usersCount","requestsCount","Login","setToken","setUser","message","setMessage","initialValues","password","validationSchema","Yup","shape","max","onSubmit","Promise","resolve","setTimeout","axios","get","process","post","responseType","errors","handleBlur","handleSubmit","isSubmitting","touched","mb","onBlur","disabled","NotFound","align","textAlign","style","marginTop","ProductListToolbar","mx","mt","InputProps","startAdornment","InputAdornment","SvgIcon","placeholder","ProductCard","product","pb","media","description","pl","totalDownloads","uuid","createdAt","ProductList","products","Pagination","Register","policy","oneOf","replace","ml","Checkbox","checked","Link","underline","FormHelperText","SettingsPassword","confirm","SettingsView","AmbulancesListToolbar","AmbulancesListResults","providers","minWidth","autoHeight","rows","columns","field","headerName","valueFormatter","params","row","first_name","last_name","board_status","address","onRowClick","toString","components","setProviders","ambulances","CreateAmbulance","setAddress","latLng","setLatLng","company_name","qualification","reg_number","current_hospital","latitude","longitude","bio","cost","setInitialValues","useParams","setDetails","setMode","ambulance","lat","lng","serviceProvider","handleAddressChange","handleAddressSelect","geocodeByAddress","results","getLatLng","createServiceProvider","updateServiceProvider","Paper","enableReinitialize","_method","setFieldValue","onlyCountries","masks","tz","prefix","countryCodeEditable","onSelect","searchOptions","componentRestrictions","getInputProps","suggestions","getSuggestionItemProps","loading","className","suggestion","cursor","marginBottom","marginRight","formattedSuggestion","mainText","multiline","rowsMax","AmbulanceDetails","details","available","created_at","BusinessesListToolbar","BusinessesListResults","Businesses","businesses","CreateBusiness","business","BusinessDetails","CategoriesListToolbar","CategoriesListResults","categories","checkboxSelection","disableSelectionOnClick","defaultMuiPrevented","Categories","setCategories","ViewCategory","category","setCategory","categoryId","getCategory","specialties","category_id","resetForm","RequestListResults","requests","service_provider","RequestListToolbar","setRequests","ViewRequest","CreateServiceProvider","services","setServices","setSpecialties","selectedServices","setSelectedServices","specialty_id","onServiceChecked","includes","provider","service","specialty","visible","FormControlLabel","control","inputProps","ServiceProviderDetails","ServiceProvidersListToolbar","ServiceProvidersListResults","defaultTheme","root","flexWrap","textField","down","searchText","setSearchText","setRows","requestSearch","searchValue","searchRegex","RegExp","filteredRows","Object","keys","some","test","classes","endAdornment","visibility","clearSearch","componentsProps","toolbar","ServiceProviders","ServicesListToolbar","ServicesListResults","Services","UsersListToolbar","UsersListResults","users","Users","setUsers","CreateUser","createUser","routes","settings","setSettings","element","children","Settings","Interceptor","undefined","errorInterceptor","setErrorInterceptor","authInterceptor","setAuthInterceptor","interceptors","request","use","hasOwnProperty","reject","addAuthInterceptor","code","addErrorInterceptor","eject","Fragment","App","tokenString","userToken","getToken","setItem","useToken","theUser","getSettings","useSettings","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f5f86ac.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","/* eslint-disable no-underscore-dangle */\nimport { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createTheme({\n  palette: {\n    background: {\n      default: '#F4F6F8',\n      paper: colors.common.white\n    },\n    primary: {\n      contrastText: '#ffffff',\n      main: '#1c6890'\n    },\n    text: {\n      primary: '#172b4d',\n      secondary: '#6b778c'\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","const Logo = (props) => (\n  <img\n    alt=\"Logo\"\n    src=\"/static/logo.svg\"\n    {...props}\n  />\n);\n\nexport default Logo;\n","import { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n// import NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Logo from './Logo';\n\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\n  const [notifications] = useState([]);\n  const navigate = useNavigate();\n\n  const logout = () => {\n    localStorage.clear();\n    navigate('/');\n    window.location.reload();\n  };\n\n  return (\n    <AppBar elevation={0} {...rest}>\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo width=\"120px\" />\n        </RouterLink>\n        <Box sx={{ flexGrow: 1 }} />\n        <Hidden lgDown>\n          {/* <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton> */}\n          <IconButton color=\"inherit\" onClick={() => navigate('/app/settings')}>\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <AccountCircleIcon />\n            </Badge>\n          </IconButton>\n          <IconButton\n            color=\"inherit\"\n            onClick={() => {\n              logout();\n            }}\n          >\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nDashboardNavbar.propTypes = {\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default DashboardNavbar;\n","import {\n  NavLink as RouterLink,\n  matchPath,\n  useLocation\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem } from '@material-ui/core';\n\nconst NavItem = ({\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const location = useLocation();\n\n  const active = href ? !!matchPath({\n    path: href,\n    end: false\n  }, location.pathname) : false;\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        py: 0\n      }}\n      {...rest}\n    >\n      <Button\n        component={RouterLink}\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'medium',\n          justifyContent: 'flex-start',\n          letterSpacing: 0,\n          py: 1.25,\n          textTransform: 'none',\n          width: '100%',\n          ...(active && {\n            color: 'primary.main'\n          }),\n          '& svg': {\n            mr: 1\n          }\n        }}\n        to={href}\n      >\n        {Icon && (\n          <Icon size=\"20\" />\n        )}\n        <span>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Box, Drawer, Hidden, List, Button } from '@material-ui/core';\nimport {\n  BarChart as BarChartIcon,\n  Inbox as InboxIcon,\n  PlusSquare as PlusSquareIcon,\n  MapPin as BusinessIcon,\n  Users as UsersIcon,\n  // FileText as FileTextIcon,\n  // User as UserIcon,\n  Edit as EditIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\n\n// const user = {\n//   avatar: '/static/images/avatars/avatar_6.png',\n//   jobTitle: 'Senior Developer',\n//   name: 'Katarina Smith'\n// };\n\nconst items = [\n  {\n    href: '/app/dashboard',\n    icon: BarChartIcon,\n    title: 'Dashboard'\n  },\n  {\n    href: '/app/requests',\n    icon: InboxIcon,\n    title: 'Requests'\n  },\n  {\n    href: '/app/users',\n    icon: UsersIcon,\n    title: 'Users'\n  },\n  {\n    href: '/app/service-providers',\n    icon: PlusSquareIcon,\n    title: 'Service Providers'\n  },\n  {\n    href: '/app/ambulances',\n    icon: PlusSquareIcon,\n    title: 'Ambulances'\n  },\n  {\n    href: '/app/businesses',\n    icon: BusinessIcon,\n    title: 'Pharmacy/Insurance'\n  }\n  // {\n  //   href: '/app/categories',\n  //   icon: FileTextIcon,\n  //   title: 'Categories'\n  // },\n  // {\n  //   href: '/app/services',\n  //   icon: FileTextIcon,\n  //   title: 'Services'\n  // },\n  // {\n  //   href: '/app/settings',\n  //   icon: UserIcon,\n  //   title: 'Profile'\n  // }\n];\n\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n    >\n      <Box sx={{ p: 2 }}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n          <Button\n            sx={{\n              color: 'text.secondary',\n              fontWeight: 'medium',\n              justifyContent: 'flex-start',\n              letterSpacing: 0,\n              py: 1.25,\n              textTransform: 'none',\n              width: '100%',\n              '& svg': {\n                mr: 1\n              }\n            }}\n          >\n            <a\n              href=\"https://blog.daktarinyumbani.or.tz/wp-admin\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <EditIcon />\n              <span>Blog</span>\n            </a>\n          </Button>\n        </List>\n      </Box>\n      <Box sx={{ flexGrow: 1 }} />\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n          PaperProps={{\n            sx: {\n              width: 256\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden lgDown>\n        <Drawer\n          anchor=\"left\"\n          open\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: 256,\n              top: 64,\n              height: 'calc(100% - 64px)'\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nDashboardSidebar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nDashboardSidebar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default DashboardSidebar;\n","import { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\n\nconst DashboardLayoutRoot = experimentalStyled('div')(\n  ({ theme }) => ({\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  })\n);\n\nconst DashboardLayoutWrapper = experimentalStyled('div')(\n  ({ theme }) => ({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  })\n);\n\nconst DashboardLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst DashboardLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst DashboardLayout = () => {\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <DashboardLayoutRoot>\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <DashboardSidebar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <DashboardLayoutWrapper>\n        <DashboardLayoutContainer>\n          <DashboardLayoutContent>\n            <Outlet />\n          </DashboardLayoutContent>\n        </DashboardLayoutContainer>\n      </DashboardLayoutWrapper>\n    </DashboardLayoutRoot>\n  );\n};\n\nexport default DashboardLayout;\n","import { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport Logo from './Logo';\n\nconst MainNavbar = (props) => (\n  <AppBar\n    elevation={0}\n    {...props}\n  >\n    <Toolbar sx={{ height: 64 }}>\n      <RouterLink to=\"/\">\n        <Logo />\n      </RouterLink>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default MainNavbar;\n","import { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport MainNavbar from './MainNavbar';\n\nconst MainLayoutRoot = experimentalStyled('div')(\n  ({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  })\n);\n\nconst MainLayoutWrapper = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64\n});\n\nconst MainLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst MainLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst MainLayout = () => (\n  <MainLayoutRoot>\n    <MainNavbar />\n    <MainLayoutWrapper>\n      <MainLayoutContainer>\n        <MainLayoutContent>\n          <Outlet />\n        </MainLayoutContent>\n      </MainLayoutContainer>\n    </MainLayoutWrapper>\n  </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","import moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography\n} from '@material-ui/core';\n\nconst user = {\n  avatar: '/static/images/avatars/avatar_6.png',\n  city: 'Los Angeles',\n  country: 'USA',\n  jobTitle: 'Senior Developer',\n  name: 'Katarina Smith',\n  timezone: 'GTM-7'\n};\n\nconst AccountProfile = (props) => (\n  <Card {...props}>\n    <CardContent>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'column'\n        }}\n      >\n        <Avatar\n          src={user.avatar}\n          sx={{\n            height: 100,\n            width: 100\n          }}\n        />\n        <Typography\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h3\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n        >\n          {`${user.city} ${user.country}`}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n        >\n          {`${moment().format('hh:mm A')} ${user.timezone}`}\n        </Typography>\n      </Box>\n    </CardContent>\n    <Divider />\n    <CardActions>\n      <Button\n        color=\"primary\"\n        fullWidth\n        variant=\"text\"\n      >\n        Upload picture\n      </Button>\n    </CardActions>\n  </Card>\n);\n\nexport default AccountProfile;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\n\nconst states = [\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  },\n  {\n    value: 'new-york',\n    label: 'New York'\n  },\n  {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }\n];\n\nconst AccountProfileDetails = (props) => {\n  const [values, setValues] = useState({\n    firstName: 'Katarina',\n    lastName: 'Smith',\n    email: 'demo@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      {...props}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default AccountProfileDetails;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport AccountProfile from 'src/components/account/AccountProfile';\nimport AccountProfileDetails from 'src/components/account/AccountProfileDetails';\n\nconst Account = () => (\n  <>\n    <Helmet>\n      <title>Account | Daktari Nyumbani</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={4} md={6} xs={12}>\n            <AccountProfile />\n          </Grid>\n          <Grid item lg={8} md={6} xs={12}>\n            <AccountProfileDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default Account;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { red, green } from '@material-ui/core/colors';\nimport MedicalServicesIcon from '@material-ui/icons/MedicalServices';\n\n// eslint-disable-next-line react/prop-types\nconst Doctors = ({ count }) => (\n  <Card sx={{ height: '100%' }}>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            DOCTORS\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {count}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: red[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <MedicalServicesIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          pt: 2,\n          display: 'flex',\n          alignItems: 'center'\n        }}\n      >\n        <ArrowUpwardIcon sx={{ color: green[900] }} />\n        {/* <Typography\n          sx={{\n            color: red[900],\n            mr: 1\n          }}\n          variant=\"body2\"\n        >\n          12%\n        </Typography> */}\n        <Typography color=\"textSecondary\" variant=\"caption\">\n          All time\n        </Typography>\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nexport default Doctors;\n","/* eslint-disable */\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  colors\n} from '@material-ui/core';\n\n// eslint-disable-next-line react/prop-types\nconst Sales = ({ serviceRequestsTrend, ambulanceRequestsTrend, interval }) => {\n  const theme = useTheme();\n\n  const labels = [];\n  let serviceRequestsData = [];\n  let ambulanceRequestsData = [];\n\n  serviceRequestsTrend.map((records) => {\n    labels.push(records.date);\n    serviceRequestsData.push(records.count);\n  });\n\n  ambulanceRequestsTrend.map((records) => {\n    ambulanceRequestsData.push(records.count);\n  });\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: serviceRequestsData,\n        label: interval\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: ambulanceRequestsData,\n        label: interval\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.paper,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader title=\"Latest Requests\" />\n      <Divider />\n      <CardContent>\n        <Box\n          sx={{\n            height: 400,\n            position: 'relative'\n          }}\n        >\n          <Bar data={data} options={options} />\n        </Box>\n      </CardContent>\n      <Divider />\n    </Card>\n  );\n};\n\nexport default Sales;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  // LinearProgress,\n  Typography\n} from '@material-ui/core';\nimport { orange } from '@material-ui/core/colors';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\n// eslint-disable-next-line react/prop-types\nconst Requests = ({ count, interval }) => (\n  <Card sx={{ height: '100%' }}>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            TOTAL REQUESTS\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {count}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: orange[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <InsertChartIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          pt: 2\n        }}\n      >\n        <Typography color=\"textSecondary\" variant=\"caption\">\n          {interval}\n        </Typography>\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nexport default Requests;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\n// eslint-disable-next-line react/prop-types\nconst TotalCustomers = ({ count }) => (\n  <Card>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            TOTAL USERS\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {count}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: green[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <PeopleIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          pt: 2\n        }}\n      >\n        <ArrowUpwardIcon sx={{ color: green[900] }} />\n        {/* <Typography\n          variant=\"body2\"\n          sx={{\n            color: green[900],\n            mr: 1\n          }}\n        >\n          16%\n        </Typography> */}\n        <Typography color=\"textSecondary\" variant=\"caption\">\n          All time\n        </Typography>\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalCustomers;\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Box\n} from '@material-ui/core';\nimport { indigo, green } from '@material-ui/core/colors';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\n// eslint-disable-next-line react/prop-types\nconst Ambulances = ({ count }) => (\n  <Card sx={{ height: '100%' }}>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            AMBULANCES\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {count}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: indigo[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <LocalShippingIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          pt: 2\n        }}\n      >\n        <ArrowUpwardIcon sx={{ color: green[900] }} />\n        {/* <Typography\n          variant=\"body2\"\n          sx={{\n            color: green[900],\n            mr: 1\n          }}\n        >\n          16%\n        </Typography> */}\n        <Typography color=\"textSecondary\" variant=\"caption\">\n          All time\n        </Typography>\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nexport default Ambulances;\n","// import axios from 'axios';\n\n// export const apiURL = 'http://daktari.test/api/v1/admin/';\nexport const apiURL = 'https://dev-api.daktarinyumbani.or.tz/api/v1/admin/';\n\n// const token = JSON.parse(localStorage.getItem('tokens'));\n\nexport const defaultHeaders = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json'\n};\n\nconst myHeaders = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json'\n  // 'Authorization': 'Bearer ' + token,\n};\n\n// eslint-disable-next-line no-unused-vars\n// const imageHeaders = {\n//   'Content-Type': 'multipart/form-data',\n//   Authorization: `Bearer ${token}`\n// };\n\nexport async function makeGetRequest(theURL) {\n  // eslint-disable-next-line no-shadow\n  const token = localStorage.getItem('token');\n  const theToken = JSON.parse(token);\n  const url = apiURL + theURL;\n  myHeaders.Authorization = `Bearer ${theToken.token.plainTextToken}`;\n\n  // return axios.get(url, {\n  //   responseType: 'application/json'\n  // });\n  return fetch(url, {\n    method: 'GET',\n    headers: myHeaders\n  });\n}\n\nexport async function makePostRequest(theURL, theBody, theMethod = 'POST') {\n  // eslint-disable-next-line no-shadow\n  const token = localStorage.getItem('token');\n  const theToken = JSON.parse(token);\n  const url = apiURL + theURL;\n  myHeaders.Authorization = `Bearer ${theToken.token.plainTextToken}`;\n  return fetch(url, {\n    method: theMethod,\n    headers: myHeaders,\n    body: theBody\n  });\n}\n","/* eslint-disable */\nimport { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport moment from 'moment';\nimport { Box, Container, Grid, MenuItem, Select } from '@material-ui/core';\nimport Doctors from 'src/components/dashboard/Doctors';\n// import LatestOrders from 'src/components/dashboard//LatestOrders';\n// import LatestProducts from 'src/components/dashboard//LatestProducts';\nimport Sales from 'src/components/dashboard//Sales';\nimport Requests from 'src/components/dashboard/Requests';\nimport TotalCustomers from 'src/components/dashboard//TotalCustomers';\nimport Ambulances from 'src/components/dashboard/Ambulances';\nimport { makePostRequest } from 'src/services/httpservice';\n// import TrafficByDevice from 'src/components/dashboard//TrafficByDevice';\n\nconst Dashboard = () => {\n  const [summary, setSummary] = useState();\n  const [intervalUnit, setIntervalUnit] = useState('day');\n  const [startDate, setStartDate] = useState(\n    moment().subtract('30', 'days').format()\n  );\n  // const [interval, setInterval] = useState({\n  //   name: 'Last 7 days',\n  //   value: '7',\n  //   unit: 'days'\n  // });\n  const [interval, setInterval] = useState({\n    name: '30 days',\n    value: '30',\n    unit: 'days'\n  });\n\n  const availableTimeSlots = [\n    { name: 'Today', value: '24', unit: 'hours' },\n    { name: 'Last 7 days', value: '7', unit: 'days' },\n    { name: '30 days', value: '30', unit: 'days' },\n    { name: '3 months', value: '3', unit: 'months' },\n    { name: '6 months', value: '6', unit: 'months' },\n    { name: '1 year', value: '1', unit: 'year' }\n  ];\n\n  function updateReportTimes(event) {\n    const value = event.target.value;\n    var selectedInterval = availableTimeSlots.filter((obj) => {\n      return obj.value === value;\n    });\n\n    if (selectedInterval.length) {\n      selectedInterval = selectedInterval[0];\n      setInterval(selectedInterval);\n\n      selectedInterval.name === 'Today'\n        ? setIntervalUnit('hour')\n        : setIntervalUnit('day');\n\n      //set start date\n      if (selectedInterval.name === 'Today') {\n        setStartDate(moment().startOf('day'));\n      } else {\n        setStartDate(\n          moment()\n            .subtract(selectedInterval.value, selectedInterval.unit)\n            .format()\n        );\n      }\n    }\n  }\n\n  function getSummary() {\n    let body = JSON.stringify({\n      from: startDate,\n      to: moment().format(),\n      unit: intervalUnit\n    });\n\n    setSummary(null);\n\n    makePostRequest('reports/summary', body)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setSummary(responseJson.data.summary);\n        } else {\n          console.log('bad status returned for summary');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getSummary();\n  }, [startDate]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard | Daktari Nyumbani</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          {summary && (\n            <Grid container spacing={3}>\n              <Grid item lg={12} sm={12} xl={12} xs={12}>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={interval.value}\n                  onChange={updateReportTimes}\n                >\n                  {availableTimeSlots.map((slot) => (\n                    <MenuItem value={slot.value}>{slot.name}</MenuItem>\n                  ))}\n                </Select>\n              </Grid>\n              <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <Doctors count={summary.serviceProvidersCount} />\n              </Grid>\n              <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <Ambulances count={summary.ambulancesCount} />\n              </Grid>\n              <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <TotalCustomers count={summary.usersCount} />\n              </Grid>\n              <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <Requests\n                  count={summary.requestsCount}\n                  interval={interval.name}\n                />\n              </Grid>\n\n              <Grid item lg={12} md={12} xl={12} xs={12}>\n                <Sales\n                  serviceRequestsTrend={summary.serviceRequestsTrend}\n                  ambulanceRequestsTrend={summary.ambulanceRequestsTrend}\n                  interval={interval.name}\n                />\n              </Grid>\n              {/* <Grid item lg={4} md={6} xl={3} xs={12}>\n            <TrafficByDevice sx={{ height: '100%' }} />\n          </Grid> */}\n            </Grid>\n          )}\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport axios from 'axios';\n// import { Alert, AlertTitle } from '@material-ui/lab';\n\nconst Login = ({ setToken, setUser }) => {\n  // const navigate = useNavigate();\n  const [message, setMessage] = useState('');\n\n  return (\n    <>\n      <Helmet>\n        <title>Login | Daktari Nyumbani</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: ''\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email('Must be a valid email')\n                .max(255)\n                .required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={async (values) => {\n              await new Promise((resolve) => setTimeout(resolve, 500));\n              // alert(JSON.stringify(values, null, 2));\n\n              axios\n                .get(`${process.env.REACT_APP_PUBLIC_URL}/sanctum/csrf-cookie`)\n                .then(() => {\n                  axios\n                    .post(\n                      `${process.env.REACT_APP_API_URL}auth/login`,\n                      values,\n                      {\n                        responseType: 'application/json'\n                      }\n                    )\n                    .then((response) => {\n                      console.log(response);\n                      if (response.status) {\n                        if (response.data.status) {\n                          console.log('Log in success.');\n                          setToken(response.data.user);\n                          setUser(response.data.user);\n                          // navigate('/');\n                          window.location.reload(false);\n                        } else {\n                          setMessage(response.data.message);\n                          console.log(message);\n                        }\n                      } else {\n                        setMessage('Something went wrong. Please try again.');\n                      }\n                    })\n                    .catch((error) => {\n                      console.error(error);\n                      setMessage('Something went wrong. Please try again.');\n                    });\n                });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography color=\"textPrimary\" variant=\"h2\">\n                    Sign in\n                  </Typography>\n                </Box>\n\n                {message && <Box sx={{ mb: 3 }}>{message}</Box>}\n\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  setToken: PropTypes.func,\n  setUser: PropTypes.func\n};\n\nexport default Login;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Typography\n} from '@material-ui/core';\n\nconst NotFound = () => (\n  <>\n    <Helmet>\n      <title>404 | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"h1\"\n        >\n          404: The page you are looking for isn’t here\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          You either tried some shady route or you came here by mistake.\n          Whichever it is, try using the navigation\n        </Typography>\n        <Box sx={{ textAlign: 'center' }}>\n          <img\n            alt=\"Under development\"\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            style={{\n              marginTop: 50,\n              display: 'inline-block',\n              maxWidth: '100%',\n              width: 560\n            }}\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst ProductListToolbar = (props) => (\n  <Box {...props}>\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end'\n      }}\n    >\n      <Button>\n        Import\n      </Button>\n      <Button sx={{ mx: 1 }}>\n        Export\n      </Button>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n      >\n        Add product\n      </Button>\n    </Box>\n    <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <TextField\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SvgIcon\n                      fontSize=\"small\"\n                      color=\"action\"\n                    >\n                      <SearchIcon />\n                    </SvgIcon>\n                  </InputAdornment>\n                )\n              }}\n              placeholder=\"Search product\"\n              variant=\"outlined\"\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  </Box>\n);\n\nexport default ProductListToolbar;\n","import PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst ProductCard = ({ product, ...rest }) => (\n  <Card\n    sx={{\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%'\n    }}\n    {...rest}\n  >\n    <CardContent>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          pb: 3\n        }}\n      >\n        <Avatar\n          alt=\"Product\"\n          src={product.media}\n          variant=\"square\"\n        />\n      </Box>\n      <Typography\n        align=\"center\"\n        color=\"textPrimary\"\n        gutterBottom\n        variant=\"h4\"\n      >\n        {product.title}\n      </Typography>\n      <Typography\n        align=\"center\"\n        color=\"textPrimary\"\n        variant=\"body1\"\n      >\n        {product.description}\n      </Typography>\n    </CardContent>\n    <Box sx={{ flexGrow: 1 }} />\n    <Divider />\n    <Box sx={{ p: 2 }}>\n      <Grid\n        container\n        spacing={2}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid\n          item\n          sx={{\n            alignItems: 'center',\n            display: 'flex'\n          }}\n        >\n          <AccessTimeIcon color=\"action\" />\n          <Typography\n            color=\"textSecondary\"\n            display=\"inline\"\n            sx={{ pl: 1 }}\n            variant=\"body2\"\n          >\n            Updated 2hr ago\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          sx={{\n            alignItems: 'center',\n            display: 'flex'\n          }}\n        >\n          <GetAppIcon color=\"action\" />\n          <Typography\n            color=\"textSecondary\"\n            display=\"inline\"\n            sx={{ pl: 1 }}\n            variant=\"body2\"\n          >\n            {product.totalDownloads}\n            {' '}\n            Downloads\n          </Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  </Card>\n);\n\nProductCard.propTypes = {\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    createdAt: '27/03/2019',\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\n    media: '/static/images/products/product_1.png',\n    title: 'Dropbox',\n    totalDownloads: '594'\n  },\n  {\n    id: uuid(),\n    createdAt: '31/03/2019',\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\n    media: '/static/images/products/product_2.png',\n    title: 'Medium Corporation',\n    totalDownloads: '625'\n  },\n  {\n    id: uuid(),\n    createdAt: '03/04/2019',\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\n    media: '/static/images/products/product_3.png',\n    title: 'Slack',\n    totalDownloads: '857'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\n    media: '/static/images/products/product_4.png',\n    title: 'Lyft',\n    totalDownloads: '406'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\n    media: '/static/images/products/product_5.png',\n    title: 'GitHub',\n    totalDownloads: '835'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\n    media: '/static/images/products/product_6.png',\n    title: 'Squarespace',\n    totalDownloads: '835'\n  }\n];\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid,\n  Pagination\n} from '@material-ui/core';\nimport ProductListToolbar from 'src/components/product/ProductListToolbar';\nimport ProductCard from 'src/components/product//ProductCard';\nimport products from 'src/__mocks__/products';\n\nconst ProductList = () => (\n  <>\n    <Helmet>\n      <title>Products | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <ProductListToolbar />\n        <Box sx={{ pt: 3 }}>\n          <Grid\n            container\n            spacing={3}\n          >\n            {products.map((product) => (\n              <Grid\n                item\n                key={product.id}\n                lg={4}\n                md={6}\n                xs={12}\n              >\n                <ProductCard product={product} />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 3\n          }}\n        >\n          <Pagination\n            color=\"primary\"\n            count={3}\n            size=\"small\"\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default ProductList;\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Helmet>\n        <title>Register | Material Kit</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              policy: false\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={() => {\n              navigate('/app/dashboard', { replace: true });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    ml: -1\n                  }}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Register;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField\n} from '@material-ui/core';\n\nconst SettingsPassword = (props) => {\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form {...props}>\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default SettingsPassword;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport SettingsPassword from 'src/components/settings/SettingsPassword';\n\nconst SettingsView = () => (\n  <>\n    <Helmet>\n      <title>Settings | Daktari Nyumbani</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Box sx={{ pt: 3 }}>\n          <SettingsPassword />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default SettingsView;\n","import { Box, Card, CardContent, Typography, Button } from '@material-ui/core';\nimport { useNavigate } from 'react-router';\n\nconst AmbulancesListToolbar = (props) => {\n  const navigate = useNavigate();\n  return (\n    <Box {...props}>\n      <Box sx={{ mt: 3 }}>\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n                Ambulances\n              </Typography>\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => navigate('create')}\n              >\n                Add ambulance provider\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AmbulancesListToolbar;\n","import PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card } from '@material-ui/core';\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport\n} from '@material-ui/data-grid';\nimport { useNavigate } from 'react-router';\n\nconst AmbulancesListResults = ({ providers, ...rest }) => {\n  const navigate = useNavigate();\n  const columns = [\n    {\n      field: 'name',\n      headerName: 'Contact Name',\n      width: 130,\n      valueFormatter: (params) =>\n        // eslint-disable-next-line implicit-arrow-linebreak\n        `${params.row.user.first_name} ${params.row.user.last_name}`\n    },\n    {\n      field: 'company_name',\n      headerName: 'Company Name',\n      width: 150\n    },\n    {\n      field: 'phone',\n      headerName: 'Phone',\n      width: 150,\n      valueFormatter: (params) => params.row.user.phone\n    },\n    {\n      field: 'reg_number',\n      headerName: 'Registration Number',\n      width: 150\n    },\n    {\n      field: 'board_status',\n      headerName: 'Board status',\n      width: 150,\n      // eslint-disable-next-line no-confusing-arrow\n      valueFormatter: (params) =>\n        // eslint-disable-next-line implicit-arrow-linebreak\n        params.row.board_status === 'registered' ? 'Not Allowed' : 'Allowed'\n    },\n    {\n      field: 'current_hospital',\n      headerName: 'Current Hospital',\n      width: 150\n    },\n    {\n      field: 'location',\n      headerName: 'Location',\n      width: 150,\n      valueFormatter: (params) => params.row.address\n    },\n    {\n      field: 'created_at',\n      headerName: 'Created At',\n      width: 150\n    },\n    {\n      field: 'active',\n      headerName: 'Active',\n      width: 150,\n      valueFormatter: (params) => (params.row.active ? 'Yes' : 'No')\n    }\n  ];\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n\n  return (\n    <Card {...rest}>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          {providers && (\n            <DataGrid\n              autoHeight\n              rows={providers}\n              columns={columns}\n              onRowClick={(params) => {\n                navigate(`${params.row.id.toString()}/details`);\n              }}\n              components={{\n                Toolbar: CustomToolbar\n              }}\n            />\n          )}\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nAmbulancesListResults.propTypes = {\n  providers: PropTypes.array.isRequired\n};\n\nexport default AmbulancesListResults;\n","import { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport { makeGetRequest } from 'src/services/httpservice';\nimport AmbulancesListToolbar from 'src/components/ambulances/AmbulancesListToolbar';\nimport AmbulancesListResults from 'src/components/ambulances/AmbulancesListResults';\n\nconst Ambulances = () => {\n  const [providers, setProviders] = useState([]);\n\n  function getServiceProviders() {\n    makeGetRequest('ambulances')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setProviders(responseJson.data.ambulances);\n        } else {\n          console.log('bad status returned for ambulances');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getServiceProviders();\n  }, []);\n  return (\n    <>\n      <Helmet>\n        <title>Service Providers</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <AmbulancesListToolbar />\n          <Box sx={{ pt: 3 }}>\n            <AmbulancesListResults providers={providers} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Ambulances;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable consistent-return */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable indent */\n/* eslint-disable no-shadow */\n/* eslint-disable operator-linebreak */\nimport { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  MenuItem,\n  Checkbox,\n  FormControlLabel\n} from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { makeGetRequest } from 'src/services/httpservice';\nimport axios from 'axios';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from 'react-places-autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { useNavigate, useParams } from 'react-router';\n\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/material.css';\n\nconst CreateAmbulance = () => {\n  const navigate = useNavigate();\n\n  const [message, setMessage] = useState('');\n  const [address, setAddress] = useState('');\n  const [latLng, setLatLng] = useState('');\n  const [selectedServices, setSelectedServices] = useState([]);\n\n  const [initialValues, setInitialValues] = useState({\n    first_name: '',\n    last_name: '',\n    company_name: '',\n    phone: '',\n    password: '000000000',\n    qualification: '',\n    reg_number: '',\n    board_status: '',\n    current_hospital: '',\n    latitude: '',\n    longitude: '',\n    address: '',\n    bio: '',\n    cost: 0\n  });\n\n  const { id } = useParams();\n\n  const [details, setDetails] = useState(null);\n  const [mode, setMode] = useState('create');\n\n  function getDetails(serviceProviderId) {\n    makeGetRequest(`ambulances/${serviceProviderId}`)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setDetails(responseJson.data.ambulance);\n          setMode('edit');\n\n          setAddress(responseJson.data.ambulance.address);\n          setLatLng({\n            lat: responseJson.data.ambulance.latitude,\n            lng: responseJson.data.ambulance.longitude\n          });\n\n          const serviceProvider = responseJson.data.ambulance;\n\n          setInitialValues({\n            first_name: serviceProvider.user.first_name,\n            last_name: serviceProvider.user.last_name,\n            company_name: serviceProvider.company_name,\n            phone: serviceProvider.user.phone,\n            qualification: serviceProvider.qualification,\n            reg_number: serviceProvider.reg_number,\n            board_status: serviceProvider.board_status,\n            current_hospital: serviceProvider.current_hospital,\n            latitude: serviceProvider.latitude,\n            longitude: serviceProvider.longitude,\n            address: serviceProvider.address,\n            bio: serviceProvider.bio,\n            cost: serviceProvider.cost\n          });\n        } else {\n          console.log('bad status returned for ambulance');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    if (id) {\n      getDetails(id);\n    }\n  }, [id]);\n\n  const handleAddressChange = (address) => {\n    setAddress(address);\n  };\n\n  const handleAddressSelect = (address) => {\n    setAddress(address);\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => setLatLng(latLng))\n      .catch((error) => console.error('Error', error));\n  };\n\n  function createServiceProvider(values) {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}ambulances`, values, {\n        responseType: 'application/json'\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.status) {\n          if (response.data.status) {\n            navigate('/app/ambulances');\n            console.log('Log in success.');\n          } else {\n            setMessage(response.data.message);\n            console.log(message);\n          }\n        } else {\n          setMessage('Something went wrong. Please try again.');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage('Something went wrong. Please try again.');\n      });\n  }\n\n  function updateServiceProvider(values) {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}ambulances/${id}`, values, {\n        responseType: 'application/json'\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.status) {\n          if (response.data.status) {\n            navigate(`/app/ambulances/${id}/details`);\n            console.log('Log in success.');\n          } else {\n            setMessage(response.data.message);\n            console.log(message);\n          }\n        } else {\n          setMessage(\n            'Something went wrong updating details. Please try again.'\n          );\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage('Something went wrong. Please try again.');\n      });\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Create Ambulance</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper style={{ padding: 30 }}>\n                <Formik\n                  enableReinitialize\n                  initialValues={initialValues}\n                  validationSchema={Yup.object().shape({\n                    first_name: Yup.string()\n                      .max(64)\n                      .required('First name is required'),\n                    last_name: Yup.string().required('Last name is required'),\n                    company_name: Yup.string().required(\n                      'Company name is required'\n                    ),\n                    phone: Yup.string().required('Phone is required'),\n                    reg_number: Yup.string()\n                      .max(64)\n                      .required('Reg. Number is required'),\n                    board_status: Yup.string().required(\n                      'Board status is required'\n                    ),\n                    current_hospital: Yup.string()\n                      .max(64)\n                      .required('Current Hospital is required'),\n                    bio: Yup.string().required('Bio is required')\n                  })}\n                  onSubmit={async (values) => {\n                    // eslint-disable-next-line no-param-reassign\n                    // values.location = { address, coordinates: latLng };\n                    // eslint-disable-next-line no-param-reassign\n                    values.address = address;\n                    // eslint-disable-next-line no-param-reassign\n                    values.latitude = latLng.lat;\n                    // eslint-disable-next-line no-param-reassign\n                    values.longitude = latLng.lng;\n\n                    // console.log(values);\n\n                    if (mode === 'edit') {\n                      // eslint-disable-next-line no-underscore-dangle\n                      values._method = 'PUT';\n                    }\n\n                    mode === 'edit'\n                      ? updateServiceProvider(values)\n                      : createServiceProvider(values);\n                  }}\n                >\n                  {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    setFieldValue,\n                    isSubmitting,\n                    touched,\n                    values\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                      <Box sx={{ mb: 3 }}>\n                        <Typography color=\"textPrimary\" variant=\"h3\">\n                          {mode === 'edit'\n                            ? 'Update Ambulance'\n                            : 'Register Ambulance'}\n                        </Typography>\n                      </Box>\n\n                      <Grid container spacing={3}>\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(\n                              touched.first_name && errors.first_name\n                            )}\n                            fullWidth\n                            helperText={touched.first_name && errors.first_name}\n                            label=\"First Name\"\n                            margin=\"normal\"\n                            name=\"first_name\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.first_name}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(\n                              touched.last_name && errors.last_name\n                            )}\n                            fullWidth\n                            helperText={touched.last_name && errors.last_name}\n                            label=\"Last Name\"\n                            margin=\"normal\"\n                            name=\"last_name\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.last_name}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <Grid item paddingTop={2} xs={12}>\n                            <PhoneInput\n                              country=\"tz\"\n                              onlyCountries={['tz']}\n                              masks={{ tz: '(...) ... - ...' }}\n                              prefix=\"+\"\n                              countryCodeEditable={false}\n                              value={values.phone}\n                              onChange={(value) => {\n                                console.log(value);\n                                setFieldValue('phone', `+${value}`);\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(\n                              touched.company_name && errors.company_name\n                            )}\n                            fullWidth\n                            helperText={\n                              touched.company_name && errors.company_name\n                            }\n                            label=\"Company Name\"\n                            margin=\"normal\"\n                            name=\"company_name\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.company_name}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(\n                              touched.reg_number && errors.reg_number\n                            )}\n                            fullWidth\n                            helperText={touched.reg_number && errors.reg_number}\n                            label=\"Registration Number\"\n                            margin=\"normal\"\n                            name=\"reg_number\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.reg_number}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <TextField\n                            select\n                            error={Boolean(\n                              touched.board_status && errors.board_status\n                            )}\n                            fullWidth\n                            helperText={\n                              touched.board_status && errors.board_status\n                            }\n                            label=\"Board Status\"\n                            margin=\"normal\"\n                            name=\"board_status\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.board_status}\n                            variant=\"outlined\"\n                          >\n                            <MenuItem value=\"registered\">\n                              Not allowed to practice\n                            </MenuItem>\n                            <MenuItem value=\"allowed\">\n                              Allowed to practice\n                            </MenuItem>\n                          </TextField>\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(\n                              touched.current_hospital &&\n                                errors.current_hospital\n                            )}\n                            fullWidth\n                            helperText={\n                              touched.current_hospital &&\n                              errors.current_hospital\n                            }\n                            label=\"Current Hospital\"\n                            margin=\"normal\"\n                            name=\"current_hospital\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.current_hospital}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(touched.cost && errors.cost)}\n                            fullWidth\n                            helperText={touched.cost && errors.cost}\n                            label=\"Cost\"\n                            margin=\"normal\"\n                            name=\"cost\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.cost}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                          <PlacesAutocomplete\n                            value={address}\n                            onChange={handleAddressChange}\n                            onSelect={handleAddressSelect}\n                            searchOptions={{\n                              componentRestrictions: { country: ['tza'] }\n                            }}\n                          >\n                            {({\n                              getInputProps,\n                              suggestions,\n                              getSuggestionItemProps,\n                              loading\n                            }) => (\n                              <div>\n                                <TextField\n                                  fullWidth\n                                  label=\"Search Places...\"\n                                  margin=\"normal\"\n                                  name=\"location\"\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  type=\"text\"\n                                  variant=\"outlined\"\n                                  {...getInputProps()}\n                                />\n\n                                <div className=\"autocomplete-dropdown-container\">\n                                  {loading && (\n                                    <Typography\n                                      variant=\"body2\"\n                                      color=\"textPrimary\"\n                                    >\n                                      Loading...\n                                    </Typography>\n                                  )}\n                                  {suggestions.map((suggestion) => {\n                                    const className = suggestion.active\n                                      ? 'suggestion-item--active'\n                                      : 'suggestion-item';\n                                    // inline style for demonstration purpose\n                                    const style = suggestion.active\n                                      ? {\n                                          backgroundColor: '#fafafa',\n                                          cursor: 'pointer'\n                                        }\n                                      : {\n                                          backgroundColor: '#ffffff',\n                                          cursor: 'pointer'\n                                        };\n                                    return (\n                                      <div\n                                        {...getSuggestionItemProps(suggestion, {\n                                          className,\n                                          style\n                                        })}\n                                      >\n                                        <Grid\n                                          container\n                                          alignItems=\"center\"\n                                          style={{\n                                            marginBottom: 5,\n                                            padding: 10\n                                          }}\n                                        >\n                                          <Grid item>\n                                            <LocationOnIcon\n                                              style={{ marginRight: 5 }}\n                                            />\n                                          </Grid>\n                                          <Grid item xs>\n                                            <span style={{ fontWeight: 400 }}>\n                                              <Typography\n                                                variant=\"body1\"\n                                                color=\"textPrimary\"\n                                              >\n                                                {\n                                                  suggestion.formattedSuggestion\n                                                    .mainText\n                                                }\n                                              </Typography>\n                                            </span>\n\n                                            <Typography\n                                              variant=\"body2\"\n                                              color=\"textSecondary\"\n                                            >\n                                              {suggestion.description}\n                                            </Typography>\n                                          </Grid>\n                                        </Grid>\n                                        {/* <span>{suggestion.description}</span> */}\n                                      </div>\n                                    );\n                                  })}\n                                </div>\n                              </div>\n                            )}\n                          </PlacesAutocomplete>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                          <TextField\n                            multiline\n                            rows={2}\n                            rowsMax={4}\n                            error={Boolean(touched.bio && errors.bio)}\n                            fullWidth\n                            helperText={touched.bio && errors.bio}\n                            label=\"Bio\"\n                            margin=\"bio\"\n                            name=\"bio\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.bio}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n                      </Grid>\n\n                      {message && <Box sx={{ mb: 3 }}>{message}</Box>}\n\n                      <Box sx={{ py: 2 }}>\n                        <Button\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          fullWidth\n                          size=\"large\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          {mode === 'edit' ? 'Update' : 'Register'}\n                        </Button>\n                      </Box>\n                    </form>\n                  )}\n                </Formik>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default CreateAmbulance;\n","/* eslint-disable operator-linebreak */\nimport moment from 'moment';\nimport {\n  // Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport { useNavigate, useParams } from 'react-router';\nimport { useEffect, useState } from 'react';\nimport { makeGetRequest } from 'src/services/httpservice';\n\nconst AmbulanceDetails = (props) => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [details, setDetails] = useState(null);\n\n  function getDetails(serviceProviderId) {\n    makeGetRequest(`ambulances/${serviceProviderId}`)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setDetails(responseJson.data.ambulance);\n        } else {\n          console.log('bad status returned for ambulance');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getDetails(id);\n  }, [id]);\n\n  return (\n    <>\n      <Card {...props}>\n        <CardContent>\n          <Box\n            sx={{\n              // alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column'\n            }}\n          >\n            <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n              Ambulance Provider Details\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      {details && (\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column'\n              }}\n            >\n              <Container maxWidth={false}>\n                <Grid container spacing={3}>\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Name\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\n                      {`${details.user.first_name} ${details.user.last_name}`}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Company Name\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\n                      {details.company_name}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Registration Number\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\n                      {details.reg_number}\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid container paddingTop={4} spacing={3}>\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Board Status\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.board_status === 'allowed'\n                        ? 'Allowed to practice'\n                        : 'Not allowed to practice'}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Current Hospital\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.current_hospital}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Availability\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.available ? 'Available' : 'Not Available'}\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid container paddingTop={4} spacing={3}>\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Cost\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.cost}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Address\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.address}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Bio\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.bio}\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid container paddingTop={4} spacing={3}>\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Created At\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {`${moment().format('hh:mm A')} ${details.created_at}`}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Phone Number\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.user.phone}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Container>\n            </Box>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            <Button\n              onClick={() => {\n                navigate(`/app/ambulances/${id.toString()}/edit`);\n              }}\n              color=\"primary\"\n              fullWidth\n              variant=\"text\"\n            >\n              Edit Ambulance Provider Details\n            </Button>\n          </CardActions>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default AmbulanceDetails;\n","import { Box, Card, CardContent, Typography, Button } from '@material-ui/core';\nimport { useNavigate } from 'react-router';\n\nconst BusinessesListToolbar = (props) => {\n  const navigate = useNavigate();\n  return (\n    <Box {...props}>\n      <Box sx={{ mt: 3 }}>\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n                Businesses (Pharmacy & Insurance Providers)\n              </Typography>\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => navigate('create')}\n              >\n                Add Business\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BusinessesListToolbar;\n","import PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card } from '@material-ui/core';\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport\n} from '@material-ui/data-grid';\nimport { useNavigate } from 'react-router';\n\nconst BusinessesListResults = ({ providers, ...rest }) => {\n  const navigate = useNavigate();\n  const columns = [\n    {\n      field: 'name',\n      headerName: 'Business Name',\n      width: 200\n    },\n    {\n      field: 'phone',\n      headerName: 'Phone',\n      width: 150\n    },\n    {\n      field: 'type',\n      headerName: 'Type',\n      width: 150\n    },\n    {\n      field: 'location',\n      headerName: 'Location',\n      width: 200,\n      valueFormatter: (params) => params.row.address\n    },\n    {\n      field: 'created_at',\n      headerName: 'Created At',\n      width: 200\n    },\n    {\n      field: 'active',\n      headerName: 'Active',\n      width: 150,\n      valueFormatter: (params) => (params.row.active ? 'Yes' : 'No')\n    }\n  ];\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n\n  return (\n    <Card {...rest}>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          {providers && (\n            <DataGrid\n              autoHeight\n              rows={providers}\n              columns={columns}\n              onRowClick={(params) => {\n                navigate(`${params.row.id.toString()}/details`);\n              }}\n              components={{\n                Toolbar: CustomToolbar\n              }}\n            />\n          )}\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nBusinessesListResults.propTypes = {\n  providers: PropTypes.array.isRequired\n};\n\nexport default BusinessesListResults;\n","import { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport { makeGetRequest } from 'src/services/httpservice';\nimport BusinessesListToolbar from 'src/components/businesses/BusinessesListToolbar';\nimport BusinessesListResults from 'src/components/businesses/BusinessesListResults';\n\nconst Businesses = () => {\n  const [providers, setProviders] = useState([]);\n\n  function getServiceProviders() {\n    makeGetRequest('businesses')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setProviders(responseJson.data.businesses);\n        } else {\n          console.log('bad status returned for businesses');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getServiceProviders();\n  }, []);\n  return (\n    <>\n      <Helmet>\n        <title>Businesses</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <BusinessesListToolbar />\n          <Box sx={{ pt: 3 }}>\n            <BusinessesListResults providers={providers} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Businesses;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable consistent-return */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable indent */\n/* eslint-disable no-shadow */\n/* eslint-disable operator-linebreak */\nimport { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  MenuItem,\n  Checkbox,\n  FormControlLabel\n} from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { makeGetRequest } from 'src/services/httpservice';\nimport axios from 'axios';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from 'react-places-autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { useNavigate, useParams } from 'react-router';\n\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/material.css';\n\nconst CreateBusiness = () => {\n  const navigate = useNavigate();\n\n  const [message, setMessage] = useState('');\n  const [address, setAddress] = useState('');\n  const [latLng, setLatLng] = useState('');\n\n  const [initialValues, setInitialValues] = useState({\n    name: '',\n    phone: '',\n    type: '',\n    latitude: '',\n    longitude: '',\n    address: '',\n    bio: ''\n  });\n\n  const { id } = useParams();\n\n  const [details, setDetails] = useState(null);\n  const [mode, setMode] = useState('create');\n\n  function getDetails(serviceProviderId) {\n    makeGetRequest(`businesses/${serviceProviderId}`)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setDetails(responseJson.data.business);\n          setMode('edit');\n\n          setAddress(responseJson.data.business.address);\n          setLatLng({\n            lat: responseJson.data.business.latitude,\n            lng: responseJson.data.business.longitude\n          });\n\n          const serviceProvider = responseJson.data.business;\n\n          setInitialValues({\n            name: serviceProvider.name,\n            phone: serviceProvider.phone,\n            type: serviceProvider.type,\n            latitude: serviceProvider.latitude,\n            longitude: serviceProvider.longitude,\n            address: serviceProvider.address,\n            bio: serviceProvider.bio\n          });\n        } else {\n          console.log('bad status returned for businesses');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    if (id) {\n      getDetails(id);\n    }\n  }, [id]);\n\n  const handleAddressChange = (address) => {\n    setAddress(address);\n  };\n\n  const handleAddressSelect = (address) => {\n    setAddress(address);\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => setLatLng(latLng))\n      .catch((error) => console.error('Error', error));\n  };\n\n  function createServiceProvider(values) {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}businesses`, values, {\n        responseType: 'application/json'\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.status) {\n          if (response.data.status) {\n            navigate('/app/businesses');\n            console.log('Log in success.');\n          } else {\n            setMessage(response.data.message);\n            console.log(message);\n          }\n        } else {\n          setMessage('Something went wrong. Please try again.');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage('Something went wrong. Please try again.');\n      });\n  }\n\n  function updateServiceProvider(values) {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}businesses/${id}`, values, {\n        responseType: 'application/json'\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.status) {\n          if (response.data.status) {\n            navigate(`/app/businesses/${id}/details`);\n            console.log('Log in success.');\n          } else {\n            setMessage(response.data.message);\n            console.log(message);\n          }\n        } else {\n          setMessage(\n            'Something went wrong updating details. Please try again.'\n          );\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage('Something went wrong. Please try again.');\n      });\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Create Business</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper style={{ padding: 30 }}>\n                <Formik\n                  enableReinitialize\n                  initialValues={initialValues}\n                  validationSchema={Yup.object().shape({\n                    name: Yup.string()\n                      .max(64)\n                      .required('Business name is required'),\n                    phone: Yup.string().required('Phone is required'),\n                    type: Yup.string().required('Business Type is required'),\n                    bio: Yup.string().required('Bio is required')\n                  })}\n                  onSubmit={async (values) => {\n                    // eslint-disable-next-line no-param-reassign\n                    // values.location = { address, coordinates: latLng };\n                    // eslint-disable-next-line no-param-reassign\n                    values.address = address;\n                    // eslint-disable-next-line no-param-reassign\n                    values.latitude = latLng.lat;\n                    // eslint-disable-next-line no-param-reassign\n                    values.longitude = latLng.lng;\n\n                    // console.log(values);\n\n                    if (mode === 'edit') {\n                      // eslint-disable-next-line no-underscore-dangle\n                      values._method = 'PUT';\n                    }\n\n                    mode === 'edit'\n                      ? updateServiceProvider(values)\n                      : createServiceProvider(values);\n                  }}\n                >\n                  {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    setFieldValue,\n                    isSubmitting,\n                    touched,\n                    values\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                      <Box sx={{ mb: 3 }}>\n                        <Typography color=\"textPrimary\" variant=\"h3\">\n                          {mode === 'edit'\n                            ? 'Update Business'\n                            : 'Register Business'}\n                        </Typography>\n                      </Box>\n\n                      <Grid container spacing={3}>\n                        <Grid item xs={4}>\n                          <TextField\n                            select\n                            error={Boolean(touched.type && errors.type)}\n                            fullWidth\n                            helperText={touched.type && errors.type}\n                            label=\"Business Type\"\n                            margin=\"normal\"\n                            name=\"type\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.type}\n                            variant=\"outlined\"\n                          >\n                            <MenuItem value=\"pharmacy\">Pharmacy</MenuItem>\n                            <MenuItem value=\"insurance\">\n                              Insurance Company\n                            </MenuItem>\n                          </TextField>\n                        </Grid>\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(touched.name && errors.name)}\n                            fullWidth\n                            helperText={touched.name && errors.name}\n                            label=\"Business Name\"\n                            margin=\"normal\"\n                            name=\"name\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.name}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <Grid item paddingTop={2} xs={12}>\n                            <PhoneInput\n                              country=\"tz\"\n                              onlyCountries={['tz']}\n                              masks={{ tz: '(...) ... - ...' }}\n                              prefix=\"+\"\n                              countryCodeEditable={false}\n                              value={values.phone}\n                              onChange={(value) => {\n                                console.log(value);\n                                setFieldValue('phone', `+${value}`);\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                          <PlacesAutocomplete\n                            value={address}\n                            onChange={handleAddressChange}\n                            onSelect={handleAddressSelect}\n                            searchOptions={{\n                              componentRestrictions: { country: ['tza'] }\n                            }}\n                          >\n                            {({\n                              getInputProps,\n                              suggestions,\n                              getSuggestionItemProps,\n                              loading\n                            }) => (\n                              <div>\n                                <TextField\n                                  fullWidth\n                                  label=\"Search Places...\"\n                                  margin=\"normal\"\n                                  name=\"location\"\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  type=\"text\"\n                                  variant=\"outlined\"\n                                  {...getInputProps()}\n                                />\n\n                                <div className=\"autocomplete-dropdown-container\">\n                                  {loading && (\n                                    <Typography\n                                      variant=\"body2\"\n                                      color=\"textPrimary\"\n                                    >\n                                      Loading...\n                                    </Typography>\n                                  )}\n                                  {suggestions.map((suggestion) => {\n                                    const className = suggestion.active\n                                      ? 'suggestion-item--active'\n                                      : 'suggestion-item';\n                                    // inline style for demonstration purpose\n                                    const style = suggestion.active\n                                      ? {\n                                          backgroundColor: '#fafafa',\n                                          cursor: 'pointer'\n                                        }\n                                      : {\n                                          backgroundColor: '#ffffff',\n                                          cursor: 'pointer'\n                                        };\n                                    return (\n                                      <div\n                                        {...getSuggestionItemProps(suggestion, {\n                                          className,\n                                          style\n                                        })}\n                                      >\n                                        <Grid\n                                          container\n                                          alignItems=\"center\"\n                                          style={{\n                                            marginBottom: 5,\n                                            padding: 10\n                                          }}\n                                        >\n                                          <Grid item>\n                                            <LocationOnIcon\n                                              style={{ marginRight: 5 }}\n                                            />\n                                          </Grid>\n                                          <Grid item xs>\n                                            <span style={{ fontWeight: 400 }}>\n                                              <Typography\n                                                variant=\"body1\"\n                                                color=\"textPrimary\"\n                                              >\n                                                {\n                                                  suggestion.formattedSuggestion\n                                                    .mainText\n                                                }\n                                              </Typography>\n                                            </span>\n\n                                            <Typography\n                                              variant=\"body2\"\n                                              color=\"textSecondary\"\n                                            >\n                                              {suggestion.description}\n                                            </Typography>\n                                          </Grid>\n                                        </Grid>\n                                        {/* <span>{suggestion.description}</span> */}\n                                      </div>\n                                    );\n                                  })}\n                                </div>\n                              </div>\n                            )}\n                          </PlacesAutocomplete>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                          <TextField\n                            multiline\n                            rows={2}\n                            rowsMax={4}\n                            error={Boolean(touched.bio && errors.bio)}\n                            fullWidth\n                            helperText={touched.bio && errors.bio}\n                            label=\"Bio\"\n                            margin=\"bio\"\n                            name=\"bio\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.bio}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n                      </Grid>\n\n                      {message && <Box sx={{ mb: 3 }}>{message}</Box>}\n\n                      <Box sx={{ py: 2 }}>\n                        <Button\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          fullWidth\n                          size=\"large\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          {mode === 'edit' ? 'Update' : 'Register'}\n                        </Button>\n                      </Box>\n                    </form>\n                  )}\n                </Formik>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default CreateBusiness;\n","/* eslint-disable operator-linebreak */\nimport moment from 'moment';\nimport {\n  // Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport { useNavigate, useParams } from 'react-router';\nimport { useEffect, useState } from 'react';\nimport { makeGetRequest } from 'src/services/httpservice';\n\nconst BusinessDetails = (props) => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [details, setDetails] = useState(null);\n\n  function getDetails(serviceProviderId) {\n    makeGetRequest(`businesses/${serviceProviderId}`)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setDetails(responseJson.data.business);\n        } else {\n          console.log('bad status returned for business');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getDetails(id);\n  }, [id]);\n\n  return (\n    <>\n      <Card {...props}>\n        <CardContent>\n          <Box\n            sx={{\n              // alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column'\n            }}\n          >\n            <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n              Business Details\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      {details && (\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column'\n              }}\n            >\n              <Container maxWidth={false}>\n                <Grid container spacing={3}>\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Business Name\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\n                      {details.name}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Business Type\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.type}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Phone Number\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.phone}\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid container paddingTop={4} spacing={3}>\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Address\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.address}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Bio\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.bio}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Created At\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {`${moment().format('hh:mm A')} ${details.created_at}`}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Container>\n            </Box>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            <Button\n              onClick={() => {\n                navigate(`/app/businesses/${id.toString()}/edit`);\n              }}\n              color=\"primary\"\n              fullWidth\n              variant=\"text\"\n            >\n              Edit Business Details\n            </Button>\n          </CardActions>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default BusinessDetails;\n","import { Box, Card, CardContent, Typography } from '@material-ui/core';\n\nconst CategoriesListToolbar = (props) => (\n  <Box {...props}>\n    <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n              Categories\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  </Box>\n);\n\nexport default CategoriesListToolbar;\n","import PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card } from '@material-ui/core';\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport\n} from '@material-ui/data-grid';\nimport { useNavigate } from 'react-router';\n\nconst CategoriesListResults = ({ categories, ...rest }) => {\n  const navigate = useNavigate();\n\n  const columns = [{ field: 'name', headerName: 'Name', width: 150 }];\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n\n  return (\n    <Card {...rest}>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <DataGrid\n            autoHeight\n            rows={categories}\n            columns={columns}\n            checkboxSelection\n            disableSelectionOnClick\n            components={{\n              Toolbar: CustomToolbar\n            }}\n            onRowClick={(params, event) => {\n              console.log(params.row.id);\n              navigate(params.row.id.toString());\n              // eslint-disable-next-line no-param-reassign\n              event.defaultMuiPrevented = true;\n            }}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nCategoriesListResults.propTypes = {\n  categories: PropTypes.array.isRequired\n};\n\nexport default CategoriesListResults;\n","import { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport CategoriesListToolbar from 'src/components/categories/CategoriesListToolbar';\nimport CategoriesListResults from 'src/components/categories/CategoriesListResults';\nimport { makeGetRequest } from 'src/services/httpservice';\n\nconst Categories = () => {\n  const [categories, setCategories] = useState([]);\n\n  function getCategories() {\n    makeGetRequest('categories')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setCategories(responseJson.data.categories);\n        } else {\n          console.log('bad status returned for categories');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Requests</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <CategoriesListToolbar />\n          <Box sx={{ pt: 3 }}>\n            <CategoriesListResults categories={categories} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Categories;\n","import { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField\n} from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { makeGetRequest } from 'src/services/httpservice';\nimport { useParams } from 'react-router';\nimport axios from 'axios';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst ViewCategory = () => {\n  const [message, setMessage] = useState('');\n  const [category, setCategory] = useState(null);\n  const { id } = useParams();\n  const categoryId = id;\n\n  const columns = [\n    { field: 'name', headerName: 'Name', width: 150 },\n    { field: 'icon', headerName: 'Icon', width: 150 }\n  ];\n\n  function getCategory() {\n    makeGetRequest(`categories/${categoryId}`)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setCategory(responseJson.data.category);\n        } else {\n          console.log('bad status returned for category');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getCategory();\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Category</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <Paper style={{ padding: 30 }}>\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h2\">\n                  {category && category.name}\n                </Typography>\n                {category && (\n                  <DataGrid\n                    autoHeight\n                    rows={category.specialties}\n                    columns={columns}\n                    checkboxSelection\n                    disableSelectionOnClick\n                  />\n                )}\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper style={{ padding: 30 }}>\n                <Formik\n                  initialValues={{\n                    name: '',\n                    icon: '',\n                    category_id: categoryId\n                  }}\n                  validationSchema={Yup.object().shape({\n                    name: Yup.string().max(64).required('Name is required'),\n                    icon: Yup.string().required('Icon is required')\n                  })}\n                  onSubmit={async (values, { resetForm }) => {\n                    axios\n                      .post(\n                        `${process.env.REACT_APP_API_URL}specialties`,\n                        values,\n                        {\n                          responseType: 'application/json'\n                        }\n                      )\n                      .then((response) => {\n                        console.log(response);\n                        if (response.status) {\n                          if (response.data.status) {\n                            resetForm({});\n                            getCategory();\n                            console.log('Log in success.');\n                          } else {\n                            setMessage(response.data.message);\n                            console.log(message);\n                          }\n                        } else {\n                          setMessage('Something went wrong. Please try again.');\n                        }\n                      })\n                      .catch((error) => {\n                        console.error(error);\n                        setMessage('Something went wrong. Please try again.');\n                      });\n                  }}\n                >\n                  {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    isSubmitting,\n                    touched,\n                    values\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                      <Box sx={{ mb: 3 }}>\n                        <Typography color=\"textPrimary\" variant=\"h2\">\n                          Add Specialties\n                        </Typography>\n                      </Box>\n                      {message && <Box sx={{ mb: 3 }}>{message}</Box>}\n\n                      <TextField\n                        error={Boolean(touched.name && errors.name)}\n                        fullWidth\n                        helperText={touched.name && errors.name}\n                        label=\"Name\"\n                        margin=\"normal\"\n                        name=\"name\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.name}\n                        variant=\"outlined\"\n                      />\n\n                      <TextField\n                        error={Boolean(touched.icon && errors.icon)}\n                        fullWidth\n                        helperText={touched.icon && errors.icon}\n                        label=\"Icon\"\n                        margin=\"normal\"\n                        name=\"icon\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.icon}\n                        variant=\"outlined\"\n                      />\n\n                      <Box sx={{ py: 2 }}>\n                        <Button\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          fullWidth\n                          size=\"large\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          Create Specialty\n                        </Button>\n                      </Box>\n                    </form>\n                  )}\n                </Formik>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default ViewCategory;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card } from '@material-ui/core';\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport\n} from '@material-ui/data-grid';\n\nconst RequestListResults = ({ requests, ...rest }) => {\n  const columns = [\n    {\n      field: 'name',\n      headerName: 'Patient Name',\n      width: 200,\n      valueFormatter: (params) =>\n        // eslint-disable-next-line implicit-arrow-linebreak\n        `${params.row.user.first_name} ${params.row.user.last_name}`\n    },\n    {\n      field: 'service_provider_name',\n      headerName: 'Service Provider Name',\n      width: 150,\n      valueFormatter: (params) =>\n        // eslint-disable-next-line implicit-arrow-linebreak\n        `${params.row.service_provider.user.first_name} ${params.row.service_provider.user.last_name}`\n    },\n    {\n      field: 'date',\n      headerName: 'Date Time',\n      width: 150\n    },\n    {\n      field: 'requests_count',\n      headerName: 'Requests',\n      width: 150\n    },\n    {\n      field: 'created_at',\n      headerName: 'Requested At',\n      width: 200\n    }\n  ];\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n\n  return (\n    <Card {...rest}>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <DataGrid\n            autoHeight\n            rows={requests}\n            columns={columns}\n            components={{\n              Toolbar: CustomToolbar\n            }}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nRequestListResults.propTypes = {\n  requests: PropTypes.array.isRequired\n};\n\nexport default RequestListResults;\n","import { Box, Button, Card, CardContent, Typography } from '@material-ui/core';\n\nconst RequestListToolbar = (props) => (\n  <Box {...props}>\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end'\n      }}\n    >\n      <Button>Import</Button>\n      <Button sx={{ mx: 1 }}>Export</Button>\n    </Box>\n    <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n              Requests\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  </Box>\n);\n\nexport default RequestListToolbar;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport RequestListResults from 'src/components/requests/RequestListResults';\nimport RequestListToolbar from 'src/components/requests/RequestListToolbar';\nimport { useEffect, useState } from 'react';\nimport { makeGetRequest } from 'src/services/httpservice';\n\nconst Requests = () => {\n  const [requests, setRequests] = useState([]);\n\n  function getRequests() {\n    makeGetRequest('service-requests/all')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setRequests(responseJson.data.requests);\n        } else {\n          console.log('bad status returned for requests');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getRequests();\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Requests</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <RequestListToolbar />\n          <Box sx={{ pt: 3 }}>\n            <RequestListResults requests={requests} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Requests;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\n// import customers from 'src/__mocks__/customers';\n// import RequestListResults from 'src/components/requests/RequestListResults';\nimport RequestListToolbar from 'src/components/requests/RequestListToolbar';\n\nconst ViewRequest = () => (\n  <>\n    <Helmet>\n      <title>Requests</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <RequestListToolbar />\n        <p>Inner request view</p>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default ViewRequest;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable consistent-return */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable indent */\n/* eslint-disable no-shadow */\n/* eslint-disable operator-linebreak */\nimport { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  MenuItem,\n  Checkbox,\n  FormControlLabel\n} from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { makeGetRequest } from 'src/services/httpservice';\nimport axios from 'axios';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from 'react-places-autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { useNavigate, useParams } from 'react-router';\n\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/material.css';\n\nconst CreateServiceProvider = () => {\n  const navigate = useNavigate();\n\n  const [message, setMessage] = useState('');\n  const [services, setServices] = useState([]);\n  const [specialties, setSpecialties] = useState([]);\n  const [address, setAddress] = useState('');\n  const [latLng, setLatLng] = useState('');\n  const [selectedServices, setSelectedServices] = useState([]);\n\n  const [initialValues, setInitialValues] = useState({\n    first_name: '',\n    last_name: '',\n    phone: '',\n    password: '000000000',\n    specialty_id: '',\n    qualification: '',\n    reg_number: '',\n    board_status: '',\n    current_hospital: '',\n    latitude: '',\n    longitude: '',\n    address: '',\n    bio: '',\n    cost: 0,\n    services: ''\n  });\n\n  const { id } = useParams();\n\n  const [details, setDetails] = useState(null);\n  const [mode, setMode] = useState('create');\n\n  const onServiceChecked = (id) => {\n    if (selectedServices.includes(id)) {\n      setSelectedServices(selectedServices.filter((x) => x !== id));\n    } else {\n      setSelectedServices((selectedServices) => [...selectedServices, id]);\n    }\n  };\n\n  function getDetails(serviceProviderId) {\n    makeGetRequest(`service-providers/${serviceProviderId}`)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setDetails(responseJson.data.provider);\n          setMode('edit');\n\n          setAddress(responseJson.data.provider.address);\n          setLatLng({\n            lat: responseJson.data.provider.latitude,\n            lng: responseJson.data.provider.longitude\n          });\n\n          const serviceProvider = responseJson.data.provider;\n\n          serviceProvider.services.map((service) => {\n            onServiceChecked(service.id);\n          });\n\n          setInitialValues({\n            first_name: serviceProvider.user.first_name,\n            last_name: serviceProvider.user.last_name,\n            phone: serviceProvider.user.phone,\n            specialty_id: serviceProvider.specialty_id,\n            qualification: serviceProvider.qualification,\n            reg_number: serviceProvider.reg_number,\n            board_status: serviceProvider.board_status,\n            current_hospital: serviceProvider.current_hospital,\n            latitude: serviceProvider.latitude,\n            longitude: serviceProvider.longitude,\n            address: serviceProvider.address,\n            bio: serviceProvider.bio,\n            cost: serviceProvider.cost,\n            services: ''\n          });\n        } else {\n          console.log('bad status returned for provider');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    if (id) {\n      getDetails(id);\n    }\n  }, [id]);\n\n  const handleAddressChange = (address) => {\n    setAddress(address);\n  };\n\n  const handleAddressSelect = (address) => {\n    setAddress(address);\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => setLatLng(latLng))\n      .catch((error) => console.error('Error', error));\n  };\n\n  function getSpecialties() {\n    makeGetRequest('specialties')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setSpecialties(responseJson.data.specialties);\n        } else {\n          console.log('bad status returned for specialties');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  function getServices() {\n    makeGetRequest('services')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setServices(responseJson.data.services);\n        } else {\n          console.log('bad status returned for services');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  function createServiceProvider(values) {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}service-providers`, values, {\n        responseType: 'application/json'\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.status) {\n          if (response.data.status) {\n            navigate('/app/service-providers');\n            console.log('Log in success.');\n          } else {\n            setMessage(response.data.message);\n            console.log(message);\n          }\n        } else {\n          setMessage('Something went wrong. Please try again.');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage('Something went wrong. Please try again.');\n      });\n  }\n\n  function updateServiceProvider(values) {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}service-providers/${id}`, values, {\n        responseType: 'application/json'\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.status) {\n          if (response.data.status) {\n            navigate(`/app/service-providers/${id}/details`);\n            console.log('Log in success.');\n          } else {\n            setMessage(response.data.message);\n            console.log(message);\n          }\n        } else {\n          setMessage(\n            'Something went wrong updating details. Please try again.'\n          );\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage('Something went wrong. Please try again.');\n      });\n  }\n\n  useEffect(() => {\n    getServices();\n  }, []);\n\n  useEffect(() => {\n    getSpecialties();\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Create Service Provider</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper style={{ padding: 30 }}>\n                <Formik\n                  enableReinitialize\n                  initialValues={initialValues}\n                  validationSchema={Yup.object().shape({\n                    first_name: Yup.string()\n                      .max(64)\n                      .required('First name is required'),\n                    last_name: Yup.string().required('Last name is required'),\n                    phone: Yup.string().required('Phone is required'),\n                    specialty_id: Yup.string()\n                      .max(64)\n                      .required('Specialty is required'),\n                    qualification: Yup.string().required(\n                      'Qualification is required'\n                    ),\n                    reg_number: Yup.string()\n                      .max(64)\n                      .required('Reg. Number is required'),\n                    board_status: Yup.string().required(\n                      'Board status is required'\n                    ),\n                    current_hospital: Yup.string()\n                      .max(64)\n                      .required('Current Hospital is required'),\n                    bio: Yup.string().required('Bio is required')\n                  })}\n                  onSubmit={async (values) => {\n                    // eslint-disable-next-line no-param-reassign\n                    // values.location = { address, coordinates: latLng };\n                    // eslint-disable-next-line no-param-reassign\n                    values.address = address;\n                    // eslint-disable-next-line no-param-reassign\n                    values.latitude = latLng.lat;\n                    // eslint-disable-next-line no-param-reassign\n                    values.longitude = latLng.lng;\n                    // eslint-disable-next-line no-param-reassign\n                    values.services = selectedServices;\n\n                    // console.log(values);\n\n                    if (mode === 'edit') {\n                      // eslint-disable-next-line no-underscore-dangle\n                      values._method = 'PUT';\n                    }\n\n                    mode === 'edit'\n                      ? updateServiceProvider(values)\n                      : createServiceProvider(values);\n                  }}\n                >\n                  {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    setFieldValue,\n                    isSubmitting,\n                    touched,\n                    values\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                      <Box sx={{ mb: 3 }}>\n                        <Typography color=\"textPrimary\" variant=\"h3\">\n                          Register Service Provider\n                        </Typography>\n                      </Box>\n\n                      <Grid container spacing={3}>\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(\n                              touched.first_name && errors.first_name\n                            )}\n                            fullWidth\n                            helperText={touched.first_name && errors.first_name}\n                            label=\"First Name\"\n                            margin=\"normal\"\n                            name=\"first_name\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.first_name}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(\n                              touched.last_name && errors.last_name\n                            )}\n                            fullWidth\n                            helperText={touched.last_name && errors.last_name}\n                            label=\"Last Name\"\n                            margin=\"normal\"\n                            name=\"last_name\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.last_name}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <Grid item paddingTop={2} xs={12}>\n                            <PhoneInput\n                              country=\"tz\"\n                              onlyCountries={['tz']}\n                              masks={{ tz: '(...) ... - ...' }}\n                              prefix=\"+\"\n                              countryCodeEditable={false}\n                              value={values.phone}\n                              onChange={(value) => {\n                                console.log(value);\n                                setFieldValue('phone', `+${value}`);\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <TextField\n                            select\n                            error={Boolean(\n                              touched.specialty_id && errors.specialty_id\n                            )}\n                            fullWidth\n                            helperText={\n                              touched.specialty_id && errors.specialty_id\n                            }\n                            label=\"Specialty\"\n                            margin=\"normal\"\n                            name=\"specialty_id\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.specialty_id}\n                            variant=\"outlined\"\n                          >\n                            <MenuItem value=\"\">Select category</MenuItem>\n                            {specialties.map((specialty) => (\n                              <MenuItem key={specialty.id} value={specialty.id}>\n                                {`${specialty.category.name} - ${specialty.name}`}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        </Grid>\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(\n                              touched.qualification && errors.qualification\n                            )}\n                            fullWidth\n                            helperText={\n                              touched.qualification && errors.qualification\n                            }\n                            label=\"Qualification\"\n                            margin=\"normal\"\n                            name=\"qualification\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.qualification}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(\n                              touched.reg_number && errors.reg_number\n                            )}\n                            fullWidth\n                            helperText={touched.reg_number && errors.reg_number}\n                            label=\"Registration Number\"\n                            margin=\"normal\"\n                            name=\"reg_number\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.reg_number}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <TextField\n                            select\n                            error={Boolean(\n                              touched.board_status && errors.board_status\n                            )}\n                            fullWidth\n                            helperText={\n                              touched.board_status && errors.board_status\n                            }\n                            label=\"Board Status\"\n                            margin=\"normal\"\n                            name=\"board_status\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.board_status}\n                            variant=\"outlined\"\n                          >\n                            <MenuItem value=\"registered\">\n                              Not allowed to practice\n                            </MenuItem>\n                            <MenuItem value=\"allowed\">\n                              Allowed to practice\n                            </MenuItem>\n                          </TextField>\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(\n                              touched.current_hospital &&\n                                errors.current_hospital\n                            )}\n                            fullWidth\n                            helperText={\n                              touched.current_hospital &&\n                              errors.current_hospital\n                            }\n                            label=\"Current Hospital\"\n                            margin=\"normal\"\n                            name=\"current_hospital\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.current_hospital}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={4}>\n                          <TextField\n                            error={Boolean(touched.cost && errors.cost)}\n                            fullWidth\n                            helperText={touched.cost && errors.cost}\n                            label=\"Cost\"\n                            margin=\"normal\"\n                            name=\"cost\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.cost}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                          <PlacesAutocomplete\n                            value={address}\n                            onChange={handleAddressChange}\n                            onSelect={handleAddressSelect}\n                            searchOptions={{\n                              componentRestrictions: { country: ['tza'] }\n                            }}\n                          >\n                            {({\n                              getInputProps,\n                              suggestions,\n                              getSuggestionItemProps,\n                              loading\n                            }) => (\n                              <div>\n                                <TextField\n                                  fullWidth\n                                  label=\"Search Places...\"\n                                  margin=\"normal\"\n                                  name=\"location\"\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  type=\"text\"\n                                  variant=\"outlined\"\n                                  {...getInputProps()}\n                                />\n                                {/* <input\n                                  style={{ width: '100%' }}\n                                  {...getInputProps({\n                                    placeholder: 'Search Places ...',\n                                    className:\n                                      'text-input form-control-text custom-form-select'\n                                  })}\n                                /> */}\n                                {/* {loading && <div>Loading...</div>}\n                                {suggestions.map((suggestion) => (\n                                  <Grid container alignItems=\"center\">\n                                    <Grid item>\n                                      <LocationOnIcon\n                                        style={{ marginRight: 2 }}\n                                      />\n                                    </Grid>\n                                    <Grid item xs>\n                                      <span style={{ fontWeight: 400 }}>\n                                        {suggestion.description}\n                                      </span>\n\n                                      <Typography\n                                        variant=\"body2\"\n                                        color=\"textSecondary\"\n                                      >\n                                        {suggestion.description}\n                                      </Typography>\n                                    </Grid>\n                                  </Grid>\n                                ))} */}\n                                <div className=\"autocomplete-dropdown-container\">\n                                  {loading && (\n                                    <Typography\n                                      variant=\"body2\"\n                                      color=\"textPrimary\"\n                                    >\n                                      Loading...\n                                    </Typography>\n                                  )}\n                                  {suggestions.map((suggestion) => {\n                                    const className = suggestion.active\n                                      ? 'suggestion-item--active'\n                                      : 'suggestion-item';\n                                    // inline style for demonstration purpose\n                                    const style = suggestion.active\n                                      ? {\n                                          backgroundColor: '#fafafa',\n                                          cursor: 'pointer'\n                                        }\n                                      : {\n                                          backgroundColor: '#ffffff',\n                                          cursor: 'pointer'\n                                        };\n                                    return (\n                                      <div\n                                        {...getSuggestionItemProps(suggestion, {\n                                          className,\n                                          style\n                                        })}\n                                      >\n                                        <Grid\n                                          container\n                                          alignItems=\"center\"\n                                          style={{\n                                            marginBottom: 5,\n                                            padding: 10\n                                          }}\n                                        >\n                                          <Grid item>\n                                            <LocationOnIcon\n                                              style={{ marginRight: 5 }}\n                                            />\n                                          </Grid>\n                                          <Grid item xs>\n                                            <span style={{ fontWeight: 400 }}>\n                                              <Typography\n                                                variant=\"body1\"\n                                                color=\"textPrimary\"\n                                              >\n                                                {\n                                                  suggestion.formattedSuggestion\n                                                    .mainText\n                                                }\n                                              </Typography>\n                                            </span>\n\n                                            <Typography\n                                              variant=\"body2\"\n                                              color=\"textSecondary\"\n                                            >\n                                              {suggestion.description}\n                                            </Typography>\n                                          </Grid>\n                                        </Grid>\n                                        {/* <span>{suggestion.description}</span> */}\n                                      </div>\n                                    );\n                                  })}\n                                </div>\n                              </div>\n                            )}\n                          </PlacesAutocomplete>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                          <TextField\n                            multiline\n                            rows={2}\n                            rowsMax={4}\n                            error={Boolean(touched.bio && errors.bio)}\n                            fullWidth\n                            helperText={touched.bio && errors.bio}\n                            label=\"Bio\"\n                            margin=\"bio\"\n                            name=\"bio\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.bio}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                          {services.map((service) => {\n                            if (service.visible) {\n                              return (\n                                <FormControlLabel\n                                  label={service.name}\n                                  control={\n                                    <Checkbox\n                                      checked={selectedServices.includes(\n                                        service.id\n                                      )}\n                                      onChange={() =>\n                                        // eslint-disable-next-line implicit-arrow-linebreak\n                                        onServiceChecked(service.id)\n                                      }\n                                      inputProps={{\n                                        'aria-label': 'primary checkbox'\n                                      }}\n                                    />\n                                  }\n                                />\n                              );\n                            }\n                          })}\n                        </Grid>\n                      </Grid>\n\n                      {message && <Box sx={{ mb: 3 }}>{message}</Box>}\n\n                      <Box sx={{ py: 2 }}>\n                        <Button\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          fullWidth\n                          size=\"large\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          {mode === 'edit' ? 'Update' : 'Register'}\n                        </Button>\n                      </Box>\n                    </form>\n                  )}\n                </Formik>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default CreateServiceProvider;\n","/* eslint-disable operator-linebreak */\nimport moment from 'moment';\nimport {\n  // Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport { useNavigate, useParams } from 'react-router';\nimport { useEffect, useState } from 'react';\nimport { makeGetRequest } from 'src/services/httpservice';\n\nconst ServiceProviderDetails = (props) => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [details, setDetails] = useState(null);\n\n  function getDetails(serviceProviderId) {\n    makeGetRequest(`service-providers/${serviceProviderId}`)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setDetails(responseJson.data.provider);\n        } else {\n          console.log('bad status returned for provider');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getDetails(id);\n  }, [id]);\n\n  return (\n    <>\n      <Card {...props}>\n        <CardContent>\n          <Box\n            sx={{\n              // alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column'\n            }}\n          >\n            <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n              Service Provider Details\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      {details && (\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column'\n              }}\n            >\n              <Container maxWidth={false}>\n                <Grid container spacing={3}>\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Name\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\n                      {`${details.user.first_name} ${details.user.last_name}`}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Specialty\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\n                      {details.specialty.name}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Registration Number\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\n                      {details.reg_number}\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid container paddingTop={4} spacing={3}>\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Board Status\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.board_status === 'allowed'\n                        ? 'Allowed to practice'\n                        : 'Not allowed to practice'}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Current Hospital\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.current_hospital}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Availability\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.available ? 'Available' : 'Not Available'}\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid container paddingTop={4} spacing={3}>\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Cost\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.cost}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Address\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.address}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Bio\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.bio}\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid container paddingTop={4} spacing={3}>\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Services\n                    </Typography>\n                    {details.services &&\n                      details.services.length > 0 &&\n                      details.services.map((service) => (\n                        <Typography\n                          color=\"textPrimary\"\n                          gutterBottom\n                          variant=\"h5\"\n                        >\n                          {service.name}\n                        </Typography>\n                      ))}\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Created At\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {`${moment().format('hh:mm A')} ${details.created_at}`}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Phone Number\n                    </Typography>\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                      {details.user.phone}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Container>\n            </Box>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            <Button\n              onClick={() => {\n                navigate(`/app/service-providers/${id.toString()}/edit`);\n              }}\n              color=\"primary\"\n              fullWidth\n              variant=\"text\"\n            >\n              Edit Service Provider Details\n            </Button>\n          </CardActions>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default ServiceProviderDetails;\n","import { Box, Card, CardContent, Typography, Button } from '@material-ui/core';\nimport { useNavigate } from 'react-router';\n\nconst ServiceProvidersListToolbar = (props) => {\n  const navigate = useNavigate();\n  return (\n    <Box {...props}>\n      <Box sx={{ mt: 3 }}>\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n                Service Providers\n              </Typography>\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => navigate('create')}\n              >\n                Add service provider\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ServiceProvidersListToolbar;\n","/* eslint-disable */\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card, TextField, IconButton } from '@material-ui/core';\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport,\n  GridToolbarFilterButton\n} from '@material-ui/data-grid';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useNavigate } from 'react-router';\nimport { createTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\n\nconst ServiceProvidersListResults = ({ providers, ...rest }) => {\n  const navigate = useNavigate();\n  const columns = [\n    {\n      field: 'name',\n      headerName: 'Name',\n      width: 130,\n      valueFormatter: (params) =>\n        // eslint-disable-next-line implicit-arrow-linebreak\n        `${params.row.user.first_name} ${params.row.user.last_name}`\n    },\n    {\n      field: 'phone',\n      headerName: 'Phone',\n      width: 150,\n      valueFormatter: (params) => params.row.user.phone\n    },\n    {\n      field: 'reg_number',\n      headerName: 'Registration Number',\n      width: 150\n    },\n    {\n      field: 'board_status',\n      headerName: 'Board status',\n      width: 150,\n      // eslint-disable-next-line no-confusing-arrow\n      valueFormatter: (params) =>\n        // eslint-disable-next-line implicit-arrow-linebreak\n        params.row.board_status === 'registered' ? 'Not Allowed' : 'Allowed'\n    },\n    {\n      field: 'current_hospital',\n      headerName: 'Current Hospital',\n      width: 150\n    },\n    {\n      field: 'location',\n      headerName: 'Location',\n      width: 150,\n      valueFormatter: (params) => params.row.address\n    },\n    {\n      field: 'category',\n      headerName: 'Category',\n      width: 150,\n      valueFormatter: (params) =>\n        // eslint-disable-next-line implicit-arrow-linebreak\n        `${params.row.specialty.category.name} - ${params.row.specialty.name}`\n    },\n    {\n      field: 'created_at',\n      headerName: 'Created At',\n      width: 150\n    },\n    {\n      field: 'active',\n      headerName: 'Active',\n      width: 150,\n      valueFormatter: (params) => (params.row.active ? 'Yes' : 'No')\n    }\n  ];\n\n  function escapeRegExp(value) {\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  const defaultTheme = createTheme();\n  const useStyles = makeStyles(\n    (theme) => ({\n      root: {\n        padding: theme.spacing(0.5, 0.5, 0),\n        justifyContent: 'space-between',\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap'\n      },\n      textField: {\n        [theme.breakpoints.down('xs')]: {\n          width: '100%'\n        },\n        margin: theme.spacing(1, 0.5, 1.5),\n        '& .MuiSvgIcon-root': {\n          marginRight: theme.spacing(0.5)\n        },\n        '& .MuiInput-underline:before': {\n          borderBottom: `1px solid ${theme.palette.divider}`\n        }\n      }\n    }),\n    { defaultTheme }\n  );\n\n  const [searchText, setSearchText] = useState('');\n  const [rows, setRows] = useState(providers);\n\n  const requestSearch = (searchValue) => {\n    setSearchText(searchValue);\n    const searchRegex = new RegExp(escapeRegExp(searchValue), 'i');\n    const filteredRows = providers.filter((row) => {\n      return Object.keys(row).some((field) => {\n        return searchRegex.test(row[field] ? row[field].toString() : '');\n      });\n    });\n    setRows(filteredRows);\n  };\n\n  useEffect(() => {\n    setRows(providers);\n  }, [providers]);\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n\n  function QuickSearchToolbar(props) {\n    const classes = useStyles();\n    return (\n      <div className={classes.root}>\n        <div>\n          <GridToolbarFilterButton />\n          <GridToolbarExport />\n        </div>\n        <TextField\n          variant=\"standard\"\n          value={props.value}\n          onChange={props.onChange}\n          className={classes.textField}\n          placeholder=\"Search…\"\n          InputProps={{\n            startAdornment: <SearchIcon fontSize=\"small\" />,\n            endAdornment: (\n              <IconButton\n                title=\"Clear\"\n                aria-label=\"Clear\"\n                size=\"small\"\n                style={{ visibility: props.value ? 'visible' : 'hidden' }}\n                onClick={props.clearSearch}\n              >\n                <ClearIcon fontSize=\"small\" />\n              </IconButton>\n            )\n          }}\n        />\n      </div>\n    );\n  }\n\n  QuickSearchToolbar.propTypes = {\n    clearSearch: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired\n  };\n\n  return (\n    <Card {...rest}>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          {providers && (\n            <DataGrid\n              autoHeight\n              rows={rows}\n              columns={columns}\n              onRowClick={(params) => {\n                navigate(`${params.row.id.toString()}/details`);\n              }}\n              components={{\n                Toolbar: QuickSearchToolbar\n              }}\n              componentsProps={{\n                toolbar: {\n                  value: searchText,\n                  onChange: (event) => requestSearch(event.target.value),\n                  clearSearch: () => requestSearch('')\n                }\n              }}\n            />\n          )}\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nServiceProvidersListResults.propTypes = {\n  providers: PropTypes.array.isRequired\n};\n\nexport default ServiceProvidersListResults;\n","import { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport ServiceProvidersListToolbar from 'src/components/serviceProviders/ServiceProvidersListToolbar';\nimport ServiceProvidersListResults from 'src/components/serviceProviders/ServiceProvidersListResults';\nimport { makeGetRequest } from 'src/services/httpservice';\n\nconst ServiceProviders = () => {\n  const [providers, setProviders] = useState([]);\n\n  function getServiceProviders() {\n    makeGetRequest('service-providers')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setProviders(responseJson.data.providers);\n        } else {\n          console.log('bad status returned for providers');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getServiceProviders();\n  }, []);\n  return (\n    <>\n      <Helmet>\n        <title>Service Providers</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <ServiceProvidersListToolbar />\n          <Box sx={{ pt: 3 }}>\n            <ServiceProvidersListResults providers={providers} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default ServiceProviders;\n","import {\n  Box,\n  Card,\n  CardContent,\n  Typography\n  // TextField,\n  // InputAdornment,\n  // SvgIcon\n} from '@material-ui/core';\n// import { Search as SearchIcon } from 'react-feather';\n\nconst ServicesListToolbar = (props) => (\n  <Box {...props}>\n    <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n              Services\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  </Box>\n);\n\nexport default ServicesListToolbar;\n","import PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card } from '@material-ui/core';\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport\n} from '@material-ui/data-grid';\n\nconst ServicesListResults = ({ services, ...rest }) => {\n  const columns = [{ field: 'name', headerName: 'Name', width: 150 }];\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n\n  return (\n    <Card {...rest}>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <DataGrid\n            autoHeight\n            rows={services}\n            columns={columns}\n            checkboxSelection\n            disableSelectionOnClick\n            components={{\n              Toolbar: CustomToolbar\n            }}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nServicesListResults.propTypes = {\n  services: PropTypes.array.isRequired\n};\n\nexport default ServicesListResults;\n","import { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport ServicesListToolbar from 'src/components/services/ServicesListToolbar';\nimport ServicesListResults from 'src/components/services/ServicesListResults';\nimport { makeGetRequest } from 'src/services/httpservice';\n\nconst Services = () => {\n  const [services, setServices] = useState([]);\n\n  function getServices() {\n    makeGetRequest('services')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setServices(responseJson.data.services);\n        } else {\n          console.log('bad status returned for services');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getServices();\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Requests</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <ServicesListToolbar />\n          <Box sx={{ pt: 3 }}>\n            <ServicesListResults services={services} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Services;\n","import { Box, Card, CardContent, Typography, Button } from '@material-ui/core';\nimport { useNavigate } from 'react-router';\n\nconst UsersListToolbar = (props) => {\n  const navigate = useNavigate();\n  return (\n    <Box {...props}>\n      <Box sx={{ mt: 3 }}>\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n                Users\n              </Typography>\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => navigate('create')}\n              >\n                Create Admin User\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UsersListToolbar;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card } from '@material-ui/core';\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport\n} from '@material-ui/data-grid';\n\nconst UsersListResults = ({ users, ...rest }) => {\n  const columns = [\n    {\n      field: 'name',\n      headerName: 'Name',\n      width: 200,\n      valueFormatter: (params) =>\n        // eslint-disable-next-line implicit-arrow-linebreak\n        `${params.row.first_name} ${params.row.last_name}`\n    },\n    {\n      field: 'phone',\n      headerName: 'Phone',\n      width: 150\n    },\n    {\n      field: 'location',\n      headerName: 'Location',\n      width: 150,\n      valueFormatter: (params) =>\n        params.row.location ? params.row.location.address : ''\n    },\n    {\n      field: 'requests_count',\n      headerName: 'Requests',\n      width: 150\n    },\n    {\n      field: 'created_at',\n      headerName: 'Created At',\n      width: 200\n    },\n    {\n      field: 'active',\n      headerName: 'Active',\n      width: 150,\n      valueFormatter: (params) => (params.row.active ? 'Yes' : 'No')\n    }\n  ];\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n\n  return (\n    <Card {...rest}>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <DataGrid\n            autoHeight\n            rows={users}\n            columns={columns}\n            components={{\n              Toolbar: CustomToolbar\n            }}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nUsersListResults.propTypes = {\n  users: PropTypes.array.isRequired\n};\n\nexport default UsersListResults;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport UsersListToolbar from 'src/components/users/UsersListToolbar';\nimport UsersListResults from 'src/components/users/UsersListResults';\nimport { useEffect, useState } from 'react';\nimport { makeGetRequest } from 'src/services/httpservice';\n\nconst Users = () => {\n  const [users, setUsers] = useState([]);\n\n  function getUsers() {\n    makeGetRequest('users/all')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.status) {\n          setUsers(responseJson.data.users);\n        } else {\n          console.log('bad status returned for users');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return (\n    <>\n      <Helmet>\n        <title>Users</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <UsersListToolbar />\n          <Box sx={{ pt: 3 }}>\n            <UsersListResults users={users} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Users;\n","/* eslint-disable */\nimport { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField\n} from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router';\n\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/material.css';\n\nconst CreateUser = () => {\n  const navigate = useNavigate();\n\n  const [message, setMessage] = useState('');\n\n  function createUser(values) {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}users/create-admin`, values, {\n        responseType: 'application/json'\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.status) {\n          if (response.data.status) {\n            navigate('/app/users');\n          } else {\n            setMessage(response.data.message);\n            console.log(message);\n          }\n        } else {\n          setMessage('Something went wrong. Please try again.');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage('Something went wrong. Please try again.');\n      });\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Create Admin</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper style={{ padding: 30 }}>\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    first_name: '',\n                    last_name: '',\n                    email: '',\n                    phone: '',\n                    password: ''\n                  }}\n                  validationSchema={Yup.object().shape({\n                    first_name: Yup.string()\n                      .max(64)\n                      .required('First name is required'),\n                    last_name: Yup.string().required('Last name is required'),\n                    phone: Yup.string().required('Phone is required'),\n                    email: Yup.string()\n                      .email('Must be a valid email')\n                      .max(255)\n                      .required('Email is required'),\n                    password: Yup.string().required('Password is required')\n                  })}\n                  onSubmit={async (values) => {\n                    console.log('subnmit');\n                    createUser(values);\n                  }}\n                >\n                  {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    setFieldValue,\n                    isSubmitting,\n                    touched,\n                    values\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                      <Box sx={{ mb: 3 }}>\n                        <Typography color=\"textPrimary\" variant=\"h3\">\n                          Register Service Provider\n                        </Typography>\n                      </Box>\n\n                      <Grid container spacing={3}>\n                        <Grid item xs={6}>\n                          <TextField\n                            error={Boolean(\n                              touched.first_name && errors.first_name\n                            )}\n                            fullWidth\n                            helperText={touched.first_name && errors.first_name}\n                            label=\"First Name\"\n                            margin=\"normal\"\n                            name=\"first_name\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.first_name}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <TextField\n                            error={Boolean(\n                              touched.last_name && errors.last_name\n                            )}\n                            fullWidth\n                            helperText={touched.last_name && errors.last_name}\n                            label=\"Last Name\"\n                            margin=\"normal\"\n                            name=\"last_name\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            value={values.last_name}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <TextField\n                            error={Boolean(touched.email && errors.email)}\n                            fullWidth\n                            helperText={touched.email && errors.email}\n                            label=\"Email\"\n                            margin=\"normal\"\n                            name=\"email\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"email\"\n                            value={values.email}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <Grid item paddingTop={2} xs={12}>\n                            <PhoneInput\n                              country=\"tz\"\n                              onlyCountries={['tz']}\n                              masks={{ tz: '(...) ... - ...' }}\n                              prefix=\"+\"\n                              countryCodeEditable={false}\n                              value={values.phone}\n                              onChange={(value) => {\n                                console.log(value);\n                                setFieldValue('phone', `+${value}`);\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <TextField\n                            error={Boolean(touched.password && errors.password)}\n                            fullWidth\n                            helperText={touched.password && errors.password}\n                            label=\"Password\"\n                            margin=\"normal\"\n                            name=\"password\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"password\"\n                            value={values.password}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n\n                        {message && <Box sx={{ mb: 3 }}>{message}</Box>}\n                      </Grid>\n\n                      <Box sx={{ py: 2 }}>\n                        <Button\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          fullWidth\n                          size=\"large\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          Register\n                        </Button>\n                      </Box>\n                    </form>\n                  )}\n                </Formik>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default CreateUser;\n","import { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/components/DashboardLayout';\nimport MainLayout from 'src/components/MainLayout';\nimport Account from 'src/pages/Account';\nimport Dashboard from 'src/pages/Dashboard';\nimport Login from 'src/pages/Login';\nimport NotFound from 'src/pages/NotFound';\nimport ProductList from 'src/pages/ProductList';\nimport Register from 'src/pages/Register';\nimport Settings from 'src/pages/Settings';\nimport Ambulances from './pages/Ambulances';\nimport CreateAmbulance from './pages/Ambulances/create';\nimport AmbulanceDetails from './pages/Ambulances/details';\nimport Businesses from './pages/Businesses';\nimport CreateBusiness from './pages/Businesses/create';\nimport BusinessDetails from './pages/Businesses/details';\nimport Categories from './pages/Categories/index';\nimport ViewCategory from './pages/Categories/single';\nimport Requests from './pages/Requests/index';\nimport ViewRequest from './pages/Requests/view';\nimport CreateServiceProvider from './pages/ServiceProviders/create';\nimport ServiceProviderDetails from './pages/ServiceProviders/details';\nimport ServiceProviders from './pages/ServiceProviders/index';\nimport Services from './pages/Services/index';\nimport Users from './pages/Users/index';\nimport CreateUser from './pages/Users/create';\n\nconst routes = (token, setToken, settings, setSettings) => [\n  {\n    path: 'app',\n    element: token ? <DashboardLayout /> : <Navigate to=\"/login\" />,\n    children: [\n      { path: 'dashboard', element: <Dashboard /> },\n      {\n        path: 'service-providers',\n        children: [\n          { path: '/', element: <ServiceProviders /> },\n          { path: '/create', element: <CreateServiceProvider /> },\n          { path: '/:id/details', element: <ServiceProviderDetails /> },\n          { path: '/:id/edit', element: <CreateServiceProvider /> }\n        ]\n      },\n      {\n        path: 'ambulances',\n        children: [\n          { path: '/', element: <Ambulances /> },\n          { path: '/create', element: <CreateAmbulance /> },\n          { path: '/:id/details', element: <AmbulanceDetails /> },\n          { path: '/:id/edit', element: <CreateAmbulance /> }\n        ]\n      },\n      {\n        path: 'businesses',\n        children: [\n          { path: '/', element: <Businesses /> },\n          { path: '/create', element: <CreateBusiness /> },\n          { path: '/:id/details', element: <BusinessDetails /> },\n          { path: '/:id/edit', element: <CreateBusiness /> }\n        ]\n      },\n      {\n        path: 'requests',\n        children: [\n          { path: '/', element: <Requests /> },\n          { path: '/:id', element: <ViewRequest /> }\n        ]\n      },\n      {\n        path: 'categories',\n        children: [\n          { path: '/', element: <Categories /> },\n          { path: '/:id', element: <ViewCategory /> }\n        ]\n      },\n      {\n        path: 'services',\n        children: [\n          { path: '/', element: <Services /> }\n          // { path: '/create', element: <ViewRequest /> }\n        ]\n      },\n      {\n        path: 'users',\n        children: [\n          { path: '/', element: <Users /> },\n          { path: '/create', element: <CreateUser /> }\n        ]\n      },\n      { path: 'account', element: <Account /> },\n      { path: 'products', element: <ProductList /> },\n      { path: 'settings', element: <Settings /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/',\n    element: !token ? <MainLayout /> : <Navigate to=\"/app/dashboard\" />,\n    children: [\n      {\n        path: 'login',\n        element: <Login setToken={setToken} setUser={setSettings} />\n      },\n      { path: 'register', element: <Register /> },\n      { path: '404', element: <NotFound /> },\n      { path: '/', element: <Navigate to=\"/app/dashboard\" /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\n// import { useStore, useActions } from \"./Store\";\nimport axios from 'axios';\n\n// let's pretend the company is called ACME\nexport const isACMEDomain = (url) => {\n  return /^([^/]+:)?\\/{2,3}[^/]+?(\\.ACME\\.com|\\.acme)(:|\\/|$)/i.test(url);\n};\n\nfunction Interceptor() {\n  //   const { auth } = useStore();\n  //   const actions = useActions();\n  const [errorInterceptor, setErrorInterceptor] = useState(undefined);\n  const [authInterceptor, setAuthInterceptor] = useState(undefined);\n\n  let token = window.localStorage.getItem('token');\n  let theToken = JSON.parse(token);\n\n  const addAuthInterceptor = () => {\n    const authInterceptor = axios.interceptors.request.use(\n      (config) => {\n        // console.log('check auth header');\n        if (theToken) {\n          if (!config.headers.hasOwnProperty('Authorization')) {\n            // console.log('no auth header');\n            //   if (auth.accessToken && isACMEDomain(config.url)) {\n            config.headers.Authorization =\n              'Bearer ' + theToken.token.plainTextToken;\n            //   }\n          } else if (!config.headers.Authorization) {\n            delete config.headers.Authorization;\n          }\n        } else {\n          console.log('no token');\n        }\n        return config;\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n    setAuthInterceptor(authInterceptor);\n  };\n\n  const removeAuthInterceptor = () => {\n    axios.interceptors.request.eject(authInterceptor);\n    setAuthInterceptor(undefined);\n  };\n\n  const addErrorInterceptor = () => {\n    const errorInterceptor = axios.interceptors.response.use(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        if (error.response) {\n          const code = error.response.status;\n          if (code === 401) {\n            // actions.auth.promptToSignIn();\n            // localStorage.clear();\n            // window.location.href = '/';\n            // window.location.reload();\n          } else {\n            let message = 'Something went wrong.';\n            if (code === 403) {\n              message = 'You’re not authorized to do that.';\n            } else if (error.message) {\n              message = error.message;\n            }\n            // actions.notifications.showNotifications(message);\n          }\n        }\n        return Promise.reject(error);\n      }\n    );\n    setErrorInterceptor(errorInterceptor);\n  };\n\n  const removeErrorInterceptor = () => {\n    axios.interceptors.request.eject(errorInterceptor);\n    setErrorInterceptor(undefined);\n  };\n\n  useEffect(() => {\n    addAuthInterceptor();\n    addErrorInterceptor();\n    return () => {\n      removeAuthInterceptor();\n      removeErrorInterceptor();\n    };\n  }, []);\n\n  return <React.Fragment />;\n}\n\nexport default Interceptor;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\nimport useToken from './hooks/useToken';\nimport useSettings from './hooks/useSettings';\nimport Interceptor from './Interceptor';\n\nconst App = () => {\n  const { token, setToken } = useToken();\n  const { settings, setSettings } = useSettings();\n\n  const routing = useRoutes(routes(token, setToken, settings, setSettings));\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Interceptor />\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { useState } from 'react';\n\nexport default function useToken() {\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    const token = userToken ? userToken.token : null;\n    return token;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = (userToken) => {\n    console.log('Setting the token here');\n    console.log(userToken);\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token.plainTextToken);\n  };\n\n  return {\n    setToken: saveToken,\n    token\n  };\n}\n","import { useState } from 'react';\n\nexport default function useSettings() {\n  const getSettings = () => {\n    const theUser = localStorage.getItem('user');\n    const userObject = JSON.parse(theUser);\n    return userObject;\n  };\n\n  const [settings, setSettings] = useState(getSettings());\n\n  const saveSettings = (user) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    setSettings(user);\n  };\n\n  return {\n    setSettings: saveSettings,\n    settings\n  };\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}